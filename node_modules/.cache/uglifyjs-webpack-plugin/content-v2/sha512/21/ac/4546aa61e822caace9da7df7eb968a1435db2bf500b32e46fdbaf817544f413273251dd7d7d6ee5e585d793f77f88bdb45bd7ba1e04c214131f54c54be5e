{"map":"{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\"}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],[,function(module,exports,__webpack_require__){\"use strict\";eval(\"/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\n// randomColor by David Merfield under the CC0 license\\n// https://github.com/davidmerfield/randomColor/\\n\\n;\\n(function (root, factory) {\\n\\n  // Support CommonJS\\n  if (( false ? undefined : _typeof(exports)) === 'object') {\\n    var randomColor = factory();\\n\\n    // Support NodeJS & Component, which allow module.exports to be a function\\n    if (( false ? undefined : _typeof(module)) === 'object' && module && module.exports) {\\n      exports = module.exports = randomColor;\\n    }\\n\\n    // Support CommonJS 1.1.1 spec\\n    exports.randomColor = randomColor;\\n\\n    // Support AMD\\n  } else if (true) {\\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\\n\\t\\t\\t\\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n\\n    // Support vanilla script loading\\n  } else {}\\n})(undefined, function () {\\n\\n  // Seed to get repeatable colors\\n  var seed = null;\\n\\n  // Shared color dictionary\\n  var colorDictionary = {};\\n\\n  // Populate the color dictionary\\n  loadColorBounds();\\n\\n  var randomColor = function randomColor(options) {\\n\\n    options = options || {};\\n\\n    // Check if there is a seed and ensure it's an\\n    // integer. Otherwise, reset the seed value.\\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\\n      seed = options.seed;\\n\\n      // A string was passed as a seed\\n    } else if (typeof options.seed === 'string') {\\n      seed = stringToInteger(options.seed);\\n\\n      // Something was passed as a seed but it wasn't an integer or string\\n    } else if (options.seed !== undefined && options.seed !== null) {\\n      throw new TypeError('The seed value must be an integer or string');\\n\\n      // No seed, reset the value outside.\\n    } else {\\n      seed = null;\\n    }\\n\\n    var H, S, B;\\n\\n    // Check if we need to generate multiple colors\\n    if (options.count !== null && options.count !== undefined) {\\n\\n      var totalColors = options.count,\\n          colors = [];\\n\\n      options.count = null;\\n\\n      while (totalColors > colors.length) {\\n\\n        // Since we're generating multiple colors,\\n        // incremement the seed. Otherwise we'd just\\n        // generate the same color each time...\\n        if (seed && options.seed) options.seed += 1;\\n\\n        colors.push(randomColor(options));\\n      }\\n\\n      options.count = totalColors;\\n\\n      return colors;\\n    }\\n\\n    // First we pick a hue (H)\\n    H = pickHue(options);\\n\\n    // Then use H to determine saturation (S)\\n    S = pickSaturation(H, options);\\n\\n    // Then use S and H to determine brightness (B).\\n    B = pickBrightness(H, S, options);\\n\\n    // Then we return the HSB color in the desired format\\n    return setFormat([H, S, B], options);\\n  };\\n\\n  function pickHue(options) {\\n\\n    var hueRange = getHueRange(options.hue),\\n        hue = randomWithin(hueRange);\\n\\n    // Instead of storing red as two seperate ranges,\\n    // we group them, using negative numbers\\n    if (hue < 0) {\\n      hue = 360 + hue;\\n    }\\n\\n    return hue;\\n  }\\n\\n  function pickSaturation(hue, options) {\\n\\n    if (options.hue === 'monochrome') {\\n      return 0;\\n    }\\n\\n    if (options.luminosity === 'random') {\\n      return randomWithin([0, 100]);\\n    }\\n\\n    var saturationRange = getSaturationRange(hue);\\n\\n    var sMin = saturationRange[0],\\n        sMax = saturationRange[1];\\n\\n    switch (options.luminosity) {\\n\\n      case 'bright':\\n        sMin = 55;\\n        break;\\n\\n      case 'dark':\\n        sMin = sMax - 10;\\n        break;\\n\\n      case 'light':\\n        sMax = 55;\\n        break;\\n    }\\n\\n    return randomWithin([sMin, sMax]);\\n  }\\n\\n  function pickBrightness(H, S, options) {\\n\\n    var bMin = getMinimumBrightness(H, S),\\n        bMax = 100;\\n\\n    switch (options.luminosity) {\\n\\n      case 'dark':\\n        bMax = bMin + 20;\\n        break;\\n\\n      case 'light':\\n        bMin = (bMax + bMin) / 2;\\n        break;\\n\\n      case 'random':\\n        bMin = 0;\\n        bMax = 100;\\n        break;\\n    }\\n\\n    return randomWithin([bMin, bMax]);\\n  }\\n\\n  function setFormat(hsv, options) {\\n\\n    switch (options.format) {\\n\\n      case 'hsvArray':\\n        return hsv;\\n\\n      case 'hslArray':\\n        return HSVtoHSL(hsv);\\n\\n      case 'hsl':\\n        var hsl = HSVtoHSL(hsv);\\n        return 'hsl(' + hsl[0] + ', ' + hsl[1] + '%, ' + hsl[2] + '%)';\\n\\n      case 'hsla':\\n        var hslColor = HSVtoHSL(hsv);\\n        var alpha = options.alpha || Math.random();\\n        return 'hsla(' + hslColor[0] + ', ' + hslColor[1] + '%, ' + hslColor[2] + '%, ' + alpha + ')';\\n\\n      case 'rgbArray':\\n        return HSVtoRGB(hsv);\\n\\n      case 'rgb':\\n        var rgb = HSVtoRGB(hsv);\\n        return 'rgb(' + rgb.join(', ') + ')';\\n\\n      case 'rgba':\\n        var rgbColor = HSVtoRGB(hsv);\\n        var alpha = options.alpha || Math.random();\\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\\n\\n      default:\\n        return HSVtoHex(hsv);\\n    }\\n  }\\n\\n  function getMinimumBrightness(H, S) {\\n\\n    var lowerBounds = getColorInfo(H).lowerBounds;\\n\\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\\n\\n      var s1 = lowerBounds[i][0],\\n          v1 = lowerBounds[i][1];\\n\\n      var s2 = lowerBounds[i + 1][0],\\n          v2 = lowerBounds[i + 1][1];\\n\\n      if (S >= s1 && S <= s2) {\\n\\n        var m = (v2 - v1) / (s2 - s1),\\n            b = v1 - m * s1;\\n\\n        return m * S + b;\\n      }\\n    }\\n\\n    return 0;\\n  }\\n\\n  function getHueRange(colorInput) {\\n\\n    if (typeof parseInt(colorInput) === 'number') {\\n\\n      var number = parseInt(colorInput);\\n\\n      if (number < 360 && number > 0) {\\n        return [number, number];\\n      }\\n    }\\n\\n    if (typeof colorInput === 'string') {\\n\\n      if (colorDictionary[colorInput]) {\\n        var color = colorDictionary[colorInput];\\n        if (color.hueRange) {\\n          return color.hueRange;\\n        }\\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\\n        var hue = HexToHSB(colorInput)[0];\\n        return [hue, hue];\\n      }\\n    }\\n\\n    return [0, 360];\\n  }\\n\\n  function getSaturationRange(hue) {\\n    return getColorInfo(hue).saturationRange;\\n  }\\n\\n  function getColorInfo(hue) {\\n\\n    // Maps red colors to make picking hue easier\\n    if (hue >= 334 && hue <= 360) {\\n      hue -= 360;\\n    }\\n\\n    for (var colorName in colorDictionary) {\\n      var color = colorDictionary[colorName];\\n      if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {\\n        return colorDictionary[colorName];\\n      }\\n    }\\n    return 'Color not found';\\n  }\\n\\n  function randomWithin(range) {\\n    if (seed === null) {\\n      return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\\n    } else {\\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\\n      var max = range[1] || 1;\\n      var min = range[0] || 0;\\n      seed = (seed * 9301 + 49297) % 233280;\\n      var rnd = seed / 233280.0;\\n      return Math.floor(min + rnd * (max - min));\\n    }\\n  }\\n\\n  function HSVtoHex(hsv) {\\n\\n    var rgb = HSVtoRGB(hsv);\\n\\n    function componentToHex(c) {\\n      var hex = c.toString(16);\\n      return hex.length == 1 ? '0' + hex : hex;\\n    }\\n\\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\\n\\n    return hex;\\n  }\\n\\n  function defineColor(name, hueRange, lowerBounds) {\\n\\n    var sMin = lowerBounds[0][0],\\n        sMax = lowerBounds[lowerBounds.length - 1][0],\\n        bMin = lowerBounds[lowerBounds.length - 1][1],\\n        bMax = lowerBounds[0][1];\\n\\n    colorDictionary[name] = {\\n      hueRange: hueRange,\\n      lowerBounds: lowerBounds,\\n      saturationRange: [sMin, sMax],\\n      brightnessRange: [bMin, bMax]\\n    };\\n  }\\n\\n  function loadColorBounds() {\\n\\n    defineColor('monochrome', null, [[0, 0], [100, 0]]);\\n\\n    defineColor('red', [-26, 18], [[20, 100], [30, 92], [40, 89], [50, 85], [60, 78], [70, 70], [80, 60], [90, 55], [100, 50]]);\\n\\n    defineColor('orange', [19, 46], [[20, 100], [30, 93], [40, 88], [50, 86], [60, 85], [70, 70], [100, 70]]);\\n\\n    defineColor('yellow', [47, 62], [[25, 100], [40, 94], [50, 89], [60, 86], [70, 84], [80, 82], [90, 80], [100, 75]]);\\n\\n    defineColor('green', [63, 178], [[30, 100], [40, 90], [50, 85], [60, 81], [70, 74], [80, 64], [90, 50], [100, 40]]);\\n\\n    defineColor('blue', [179, 257], [[20, 100], [30, 86], [40, 80], [50, 74], [60, 60], [70, 52], [80, 44], [90, 39], [100, 35]]);\\n\\n    defineColor('purple', [258, 282], [[20, 100], [30, 87], [40, 79], [50, 70], [60, 65], [70, 59], [80, 52], [90, 45], [100, 42]]);\\n\\n    defineColor('pink', [283, 334], [[20, 100], [30, 90], [40, 86], [60, 84], [80, 80], [90, 75], [100, 73]]);\\n  }\\n\\n  function HSVtoRGB(hsv) {\\n\\n    // this doesn't work for the values of 0 and 360\\n    // here's the hacky fix\\n    var h = hsv[0];\\n    if (h === 0) {\\n      h = 1;\\n    }\\n    if (h === 360) {\\n      h = 359;\\n    }\\n\\n    // Rebase the h,s,v values\\n    h = h / 360;\\n    var s = hsv[1] / 100,\\n        v = hsv[2] / 100;\\n\\n    var h_i = Math.floor(h * 6),\\n        f = h * 6 - h_i,\\n        p = v * (1 - s),\\n        q = v * (1 - f * s),\\n        t = v * (1 - (1 - f) * s),\\n        r = 256,\\n        g = 256,\\n        b = 256;\\n\\n    switch (h_i) {\\n      case 0:\\n        r = v;\\n        g = t;\\n        b = p;\\n        break;\\n      case 1:\\n        r = q;\\n        g = v;\\n        b = p;\\n        break;\\n      case 2:\\n        r = p;\\n        g = v;\\n        b = t;\\n        break;\\n      case 3:\\n        r = p;\\n        g = q;\\n        b = v;\\n        break;\\n      case 4:\\n        r = t;\\n        g = p;\\n        b = v;\\n        break;\\n      case 5:\\n        r = v;\\n        g = p;\\n        b = q;\\n        break;\\n    }\\n\\n    var result = [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\\n    return result;\\n  }\\n\\n  function HexToHSB(hex) {\\n    hex = hex.replace(/^#/, '');\\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\\n\\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\\n        green = parseInt(hex.substr(2, 2), 16) / 255,\\n        blue = parseInt(hex.substr(4, 2), 16) / 255;\\n\\n    var cMax = Math.max(red, green, blue),\\n        delta = cMax - Math.min(red, green, blue),\\n        saturation = cMax ? delta / cMax : 0;\\n\\n    switch (cMax) {\\n      case red:\\n        return [60 * ((green - blue) / delta % 6) || 0, saturation, cMax];\\n      case green:\\n        return [60 * ((blue - red) / delta + 2) || 0, saturation, cMax];\\n      case blue:\\n        return [60 * ((red - green) / delta + 4) || 0, saturation, cMax];\\n    }\\n  }\\n\\n  function HSVtoHSL(hsv) {\\n    var h = hsv[0],\\n        s = hsv[1] / 100,\\n        v = hsv[2] / 100,\\n        k = (2 - s) * v;\\n\\n    return [h, Math.round(s * v / (k < 1 ? k : 2 - k) * 10000) / 100, k / 2 * 100];\\n  }\\n\\n  function stringToInteger(string) {\\n    var total = 0;\\n    for (var i = 0; i !== string.length; i++) {\\n      if (total >= Number.MAX_SAFE_INTEGER) break;\\n      total += string.charCodeAt(i);\\n    }\\n    return total;\\n  }\\n\\n  return randomColor;\\n});\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(2)(module)))//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL19wdWJsaWMvJGFzc2V0cy9saWIvcmFuZG9tQ29sb3IuanM/ODg0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuLy8gcmFuZG9tQ29sb3IgYnkgRGF2aWQgTWVyZmllbGQgdW5kZXIgdGhlIENDMCBsaWNlbnNlXG4vLyBodHRwczovL2dpdGh1Yi5jb20vZGF2aWRtZXJmaWVsZC9yYW5kb21Db2xvci9cblxuO1xuKGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7XG5cbiAgLy8gU3VwcG9ydCBDb21tb25KU1xuICBpZiAoKHR5cGVvZiBleHBvcnRzID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihleHBvcnRzKSkgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIHJhbmRvbUNvbG9yID0gZmFjdG9yeSgpO1xuXG4gICAgLy8gU3VwcG9ydCBOb2RlSlMgJiBDb21wb25lbnQsIHdoaWNoIGFsbG93IG1vZHVsZS5leHBvcnRzIHRvIGJlIGEgZnVuY3Rpb25cbiAgICBpZiAoKHR5cGVvZiBtb2R1bGUgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKG1vZHVsZSkpID09PSAnb2JqZWN0JyAmJiBtb2R1bGUgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICAgIGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJhbmRvbUNvbG9yO1xuICAgIH1cblxuICAgIC8vIFN1cHBvcnQgQ29tbW9uSlMgMS4xLjEgc3BlY1xuICAgIGV4cG9ydHMucmFuZG9tQ29sb3IgPSByYW5kb21Db2xvcjtcblxuICAgIC8vIFN1cHBvcnQgQU1EXG4gIH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFtdLCBmYWN0b3J5KTtcblxuICAgIC8vIFN1cHBvcnQgdmFuaWxsYSBzY3JpcHQgbG9hZGluZ1xuICB9IGVsc2Uge1xuICAgIHJvb3QucmFuZG9tQ29sb3IgPSBmYWN0b3J5KCk7XG4gIH1cbn0pKHVuZGVmaW5lZCwgZnVuY3Rpb24gKCkge1xuXG4gIC8vIFNlZWQgdG8gZ2V0IHJlcGVhdGFibGUgY29sb3JzXG4gIHZhciBzZWVkID0gbnVsbDtcblxuICAvLyBTaGFyZWQgY29sb3IgZGljdGlvbmFyeVxuICB2YXIgY29sb3JEaWN0aW9uYXJ5ID0ge307XG5cbiAgLy8gUG9wdWxhdGUgdGhlIGNvbG9yIGRpY3Rpb25hcnlcbiAgbG9hZENvbG9yQm91bmRzKCk7XG5cbiAgdmFyIHJhbmRvbUNvbG9yID0gZnVuY3Rpb24gcmFuZG9tQ29sb3Iob3B0aW9ucykge1xuXG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgICAvLyBDaGVjayBpZiB0aGVyZSBpcyBhIHNlZWQgYW5kIGVuc3VyZSBpdCdzIGFuXG4gICAgLy8gaW50ZWdlci4gT3RoZXJ3aXNlLCByZXNldCB0aGUgc2VlZCB2YWx1ZS5cbiAgICBpZiAob3B0aW9ucy5zZWVkICE9PSB1bmRlZmluZWQgJiYgb3B0aW9ucy5zZWVkICE9PSBudWxsICYmIG9wdGlvbnMuc2VlZCA9PT0gcGFyc2VJbnQob3B0aW9ucy5zZWVkLCAxMCkpIHtcbiAgICAgIHNlZWQgPSBvcHRpb25zLnNlZWQ7XG5cbiAgICAgIC8vIEEgc3RyaW5nIHdhcyBwYXNzZWQgYXMgYSBzZWVkXG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5zZWVkID09PSAnc3RyaW5nJykge1xuICAgICAgc2VlZCA9IHN0cmluZ1RvSW50ZWdlcihvcHRpb25zLnNlZWQpO1xuXG4gICAgICAvLyBTb21ldGhpbmcgd2FzIHBhc3NlZCBhcyBhIHNlZWQgYnV0IGl0IHdhc24ndCBhbiBpbnRlZ2VyIG9yIHN0cmluZ1xuICAgIH0gZWxzZSBpZiAob3B0aW9ucy5zZWVkICE9PSB1bmRlZmluZWQgJiYgb3B0aW9ucy5zZWVkICE9PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgc2VlZCB2YWx1ZSBtdXN0IGJlIGFuIGludGVnZXIgb3Igc3RyaW5nJyk7XG5cbiAgICAgIC8vIE5vIHNlZWQsIHJlc2V0IHRoZSB2YWx1ZSBvdXRzaWRlLlxuICAgIH0gZWxzZSB7XG4gICAgICBzZWVkID0gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgSCwgUywgQjtcblxuICAgIC8vIENoZWNrIGlmIHdlIG5lZWQgdG8gZ2VuZXJhdGUgbXVsdGlwbGUgY29sb3JzXG4gICAgaWYgKG9wdGlvbnMuY291bnQgIT09IG51bGwgJiYgb3B0aW9ucy5jb3VudCAhPT0gdW5kZWZpbmVkKSB7XG5cbiAgICAgIHZhciB0b3RhbENvbG9ycyA9IG9wdGlvbnMuY291bnQsXG4gICAgICAgICAgY29sb3JzID0gW107XG5cbiAgICAgIG9wdGlvbnMuY291bnQgPSBudWxsO1xuXG4gICAgICB3aGlsZSAodG90YWxDb2xvcnMgPiBjb2xvcnMubGVuZ3RoKSB7XG5cbiAgICAgICAgLy8gU2luY2Ugd2UncmUgZ2VuZXJhdGluZyBtdWx0aXBsZSBjb2xvcnMsXG4gICAgICAgIC8vIGluY3JlbWVtZW50IHRoZSBzZWVkLiBPdGhlcndpc2Ugd2UnZCBqdXN0XG4gICAgICAgIC8vIGdlbmVyYXRlIHRoZSBzYW1lIGNvbG9yIGVhY2ggdGltZS4uLlxuICAgICAgICBpZiAoc2VlZCAmJiBvcHRpb25zLnNlZWQpIG9wdGlvbnMuc2VlZCArPSAxO1xuXG4gICAgICAgIGNvbG9ycy5wdXNoKHJhbmRvbUNvbG9yKG9wdGlvbnMpKTtcbiAgICAgIH1cblxuICAgICAgb3B0aW9ucy5jb3VudCA9IHRvdGFsQ29sb3JzO1xuXG4gICAgICByZXR1cm4gY29sb3JzO1xuICAgIH1cblxuICAgIC8vIEZpcnN0IHdlIHBpY2sgYSBodWUgKEgpXG4gICAgSCA9IHBpY2tIdWUob3B0aW9ucyk7XG5cbiAgICAvLyBUaGVuIHVzZSBIIHRvIGRldGVybWluZSBzYXR1cmF0aW9uIChTKVxuICAgIFMgPSBwaWNrU2F0dXJhdGlvbihILCBvcHRpb25zKTtcblxuICAgIC8vIFRoZW4gdXNlIFMgYW5kIEggdG8gZGV0ZXJtaW5lIGJyaWdodG5lc3MgKEIpLlxuICAgIEIgPSBwaWNrQnJpZ2h0bmVzcyhILCBTLCBvcHRpb25zKTtcblxuICAgIC8vIFRoZW4gd2UgcmV0dXJuIHRoZSBIU0IgY29sb3IgaW4gdGhlIGRlc2lyZWQgZm9ybWF0XG4gICAgcmV0dXJuIHNldEZvcm1hdChbSCwgUywgQl0sIG9wdGlvbnMpO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHBpY2tIdWUob3B0aW9ucykge1xuXG4gICAgdmFyIGh1ZVJhbmdlID0gZ2V0SHVlUmFuZ2Uob3B0aW9ucy5odWUpLFxuICAgICAgICBodWUgPSByYW5kb21XaXRoaW4oaHVlUmFuZ2UpO1xuXG4gICAgLy8gSW5zdGVhZCBvZiBzdG9yaW5nIHJlZCBhcyB0d28gc2VwZXJhdGUgcmFuZ2VzLFxuICAgIC8vIHdlIGdyb3VwIHRoZW0sIHVzaW5nIG5lZ2F0aXZlIG51bWJlcnNcbiAgICBpZiAoaHVlIDwgMCkge1xuICAgICAgaHVlID0gMzYwICsgaHVlO1xuICAgIH1cblxuICAgIHJldHVybiBodWU7XG4gIH1cblxuICBmdW5jdGlvbiBwaWNrU2F0dXJhdGlvbihodWUsIG9wdGlvbnMpIHtcblxuICAgIGlmIChvcHRpb25zLmh1ZSA9PT0gJ21vbm9jaHJvbWUnKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5sdW1pbm9zaXR5ID09PSAncmFuZG9tJykge1xuICAgICAgcmV0dXJuIHJhbmRvbVdpdGhpbihbMCwgMTAwXSk7XG4gICAgfVxuXG4gICAgdmFyIHNhdHVyYXRpb25SYW5nZSA9IGdldFNhdHVyYXRpb25SYW5nZShodWUpO1xuXG4gICAgdmFyIHNNaW4gPSBzYXR1cmF0aW9uUmFuZ2VbMF0sXG4gICAgICAgIHNNYXggPSBzYXR1cmF0aW9uUmFuZ2VbMV07XG5cbiAgICBzd2l0Y2ggKG9wdGlvbnMubHVtaW5vc2l0eSkge1xuXG4gICAgICBjYXNlICdicmlnaHQnOlxuICAgICAgICBzTWluID0gNTU7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdkYXJrJzpcbiAgICAgICAgc01pbiA9IHNNYXggLSAxMDtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2xpZ2h0JzpcbiAgICAgICAgc01heCA9IDU1O1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICByZXR1cm4gcmFuZG9tV2l0aGluKFtzTWluLCBzTWF4XSk7XG4gIH1cblxuICBmdW5jdGlvbiBwaWNrQnJpZ2h0bmVzcyhILCBTLCBvcHRpb25zKSB7XG5cbiAgICB2YXIgYk1pbiA9IGdldE1pbmltdW1CcmlnaHRuZXNzKEgsIFMpLFxuICAgICAgICBiTWF4ID0gMTAwO1xuXG4gICAgc3dpdGNoIChvcHRpb25zLmx1bWlub3NpdHkpIHtcblxuICAgICAgY2FzZSAnZGFyayc6XG4gICAgICAgIGJNYXggPSBiTWluICsgMjA7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdsaWdodCc6XG4gICAgICAgIGJNaW4gPSAoYk1heCArIGJNaW4pIC8gMjtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3JhbmRvbSc6XG4gICAgICAgIGJNaW4gPSAwO1xuICAgICAgICBiTWF4ID0gMTAwO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICByZXR1cm4gcmFuZG9tV2l0aGluKFtiTWluLCBiTWF4XSk7XG4gIH1cblxuICBmdW5jdGlvbiBzZXRGb3JtYXQoaHN2LCBvcHRpb25zKSB7XG5cbiAgICBzd2l0Y2ggKG9wdGlvbnMuZm9ybWF0KSB7XG5cbiAgICAgIGNhc2UgJ2hzdkFycmF5JzpcbiAgICAgICAgcmV0dXJuIGhzdjtcblxuICAgICAgY2FzZSAnaHNsQXJyYXknOlxuICAgICAgICByZXR1cm4gSFNWdG9IU0woaHN2KTtcblxuICAgICAgY2FzZSAnaHNsJzpcbiAgICAgICAgdmFyIGhzbCA9IEhTVnRvSFNMKGhzdik7XG4gICAgICAgIHJldHVybiAnaHNsKCcgKyBoc2xbMF0gKyAnLCAnICsgaHNsWzFdICsgJyUsICcgKyBoc2xbMl0gKyAnJSknO1xuXG4gICAgICBjYXNlICdoc2xhJzpcbiAgICAgICAgdmFyIGhzbENvbG9yID0gSFNWdG9IU0woaHN2KTtcbiAgICAgICAgdmFyIGFscGhhID0gb3B0aW9ucy5hbHBoYSB8fCBNYXRoLnJhbmRvbSgpO1xuICAgICAgICByZXR1cm4gJ2hzbGEoJyArIGhzbENvbG9yWzBdICsgJywgJyArIGhzbENvbG9yWzFdICsgJyUsICcgKyBoc2xDb2xvclsyXSArICclLCAnICsgYWxwaGEgKyAnKSc7XG5cbiAgICAgIGNhc2UgJ3JnYkFycmF5JzpcbiAgICAgICAgcmV0dXJuIEhTVnRvUkdCKGhzdik7XG5cbiAgICAgIGNhc2UgJ3JnYic6XG4gICAgICAgIHZhciByZ2IgPSBIU1Z0b1JHQihoc3YpO1xuICAgICAgICByZXR1cm4gJ3JnYignICsgcmdiLmpvaW4oJywgJykgKyAnKSc7XG5cbiAgICAgIGNhc2UgJ3JnYmEnOlxuICAgICAgICB2YXIgcmdiQ29sb3IgPSBIU1Z0b1JHQihoc3YpO1xuICAgICAgICB2YXIgYWxwaGEgPSBvcHRpb25zLmFscGhhIHx8IE1hdGgucmFuZG9tKCk7XG4gICAgICAgIHJldHVybiAncmdiYSgnICsgcmdiQ29sb3Iuam9pbignLCAnKSArICcsICcgKyBhbHBoYSArICcpJztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIEhTVnRvSGV4KGhzdik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TWluaW11bUJyaWdodG5lc3MoSCwgUykge1xuXG4gICAgdmFyIGxvd2VyQm91bmRzID0gZ2V0Q29sb3JJbmZvKEgpLmxvd2VyQm91bmRzO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsb3dlckJvdW5kcy5sZW5ndGggLSAxOyBpKyspIHtcblxuICAgICAgdmFyIHMxID0gbG93ZXJCb3VuZHNbaV1bMF0sXG4gICAgICAgICAgdjEgPSBsb3dlckJvdW5kc1tpXVsxXTtcblxuICAgICAgdmFyIHMyID0gbG93ZXJCb3VuZHNbaSArIDFdWzBdLFxuICAgICAgICAgIHYyID0gbG93ZXJCb3VuZHNbaSArIDFdWzFdO1xuXG4gICAgICBpZiAoUyA+PSBzMSAmJiBTIDw9IHMyKSB7XG5cbiAgICAgICAgdmFyIG0gPSAodjIgLSB2MSkgLyAoczIgLSBzMSksXG4gICAgICAgICAgICBiID0gdjEgLSBtICogczE7XG5cbiAgICAgICAgcmV0dXJuIG0gKiBTICsgYjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEh1ZVJhbmdlKGNvbG9ySW5wdXQpIHtcblxuICAgIGlmICh0eXBlb2YgcGFyc2VJbnQoY29sb3JJbnB1dCkgPT09ICdudW1iZXInKSB7XG5cbiAgICAgIHZhciBudW1iZXIgPSBwYXJzZUludChjb2xvcklucHV0KTtcblxuICAgICAgaWYgKG51bWJlciA8IDM2MCAmJiBudW1iZXIgPiAwKSB7XG4gICAgICAgIHJldHVybiBbbnVtYmVyLCBudW1iZXJdO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgY29sb3JJbnB1dCA9PT0gJ3N0cmluZycpIHtcblxuICAgICAgaWYgKGNvbG9yRGljdGlvbmFyeVtjb2xvcklucHV0XSkge1xuICAgICAgICB2YXIgY29sb3IgPSBjb2xvckRpY3Rpb25hcnlbY29sb3JJbnB1dF07XG4gICAgICAgIGlmIChjb2xvci5odWVSYW5nZSkge1xuICAgICAgICAgIHJldHVybiBjb2xvci5odWVSYW5nZTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChjb2xvcklucHV0Lm1hdGNoKC9eIz8oWzAtOUEtRl17M318WzAtOUEtRl17Nn0pJC9pKSkge1xuICAgICAgICB2YXIgaHVlID0gSGV4VG9IU0IoY29sb3JJbnB1dClbMF07XG4gICAgICAgIHJldHVybiBbaHVlLCBodWVdO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBbMCwgMzYwXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFNhdHVyYXRpb25SYW5nZShodWUpIHtcbiAgICByZXR1cm4gZ2V0Q29sb3JJbmZvKGh1ZSkuc2F0dXJhdGlvblJhbmdlO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0Q29sb3JJbmZvKGh1ZSkge1xuXG4gICAgLy8gTWFwcyByZWQgY29sb3JzIHRvIG1ha2UgcGlja2luZyBodWUgZWFzaWVyXG4gICAgaWYgKGh1ZSA+PSAzMzQgJiYgaHVlIDw9IDM2MCkge1xuICAgICAgaHVlIC09IDM2MDtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBjb2xvck5hbWUgaW4gY29sb3JEaWN0aW9uYXJ5KSB7XG4gICAgICB2YXIgY29sb3IgPSBjb2xvckRpY3Rpb25hcnlbY29sb3JOYW1lXTtcbiAgICAgIGlmIChjb2xvci5odWVSYW5nZSAmJiBodWUgPj0gY29sb3IuaHVlUmFuZ2VbMF0gJiYgaHVlIDw9IGNvbG9yLmh1ZVJhbmdlWzFdKSB7XG4gICAgICAgIHJldHVybiBjb2xvckRpY3Rpb25hcnlbY29sb3JOYW1lXTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuICdDb2xvciBub3QgZm91bmQnO1xuICB9XG5cbiAgZnVuY3Rpb24gcmFuZG9tV2l0aGluKHJhbmdlKSB7XG4gICAgaWYgKHNlZWQgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKHJhbmdlWzBdICsgTWF0aC5yYW5kb20oKSAqIChyYW5nZVsxXSArIDEgLSByYW5nZVswXSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvL1NlZWRlZCByYW5kb20gYWxnb3JpdGhtIGZyb20gaHR0cDovL2luZGllZ2Ftci5jb20vZ2VuZXJhdGUtcmVwZWF0YWJsZS1yYW5kb20tbnVtYmVycy1pbi1qcy9cbiAgICAgIHZhciBtYXggPSByYW5nZVsxXSB8fCAxO1xuICAgICAgdmFyIG1pbiA9IHJhbmdlWzBdIHx8IDA7XG4gICAgICBzZWVkID0gKHNlZWQgKiA5MzAxICsgNDkyOTcpICUgMjMzMjgwO1xuICAgICAgdmFyIHJuZCA9IHNlZWQgLyAyMzMyODAuMDtcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKG1pbiArIHJuZCAqIChtYXggLSBtaW4pKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBIU1Z0b0hleChoc3YpIHtcblxuICAgIHZhciByZ2IgPSBIU1Z0b1JHQihoc3YpO1xuXG4gICAgZnVuY3Rpb24gY29tcG9uZW50VG9IZXgoYykge1xuICAgICAgdmFyIGhleCA9IGMudG9TdHJpbmcoMTYpO1xuICAgICAgcmV0dXJuIGhleC5sZW5ndGggPT0gMSA/ICcwJyArIGhleCA6IGhleDtcbiAgICB9XG5cbiAgICB2YXIgaGV4ID0gJyMnICsgY29tcG9uZW50VG9IZXgocmdiWzBdKSArIGNvbXBvbmVudFRvSGV4KHJnYlsxXSkgKyBjb21wb25lbnRUb0hleChyZ2JbMl0pO1xuXG4gICAgcmV0dXJuIGhleDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlZmluZUNvbG9yKG5hbWUsIGh1ZVJhbmdlLCBsb3dlckJvdW5kcykge1xuXG4gICAgdmFyIHNNaW4gPSBsb3dlckJvdW5kc1swXVswXSxcbiAgICAgICAgc01heCA9IGxvd2VyQm91bmRzW2xvd2VyQm91bmRzLmxlbmd0aCAtIDFdWzBdLFxuICAgICAgICBiTWluID0gbG93ZXJCb3VuZHNbbG93ZXJCb3VuZHMubGVuZ3RoIC0gMV1bMV0sXG4gICAgICAgIGJNYXggPSBsb3dlckJvdW5kc1swXVsxXTtcblxuICAgIGNvbG9yRGljdGlvbmFyeVtuYW1lXSA9IHtcbiAgICAgIGh1ZVJhbmdlOiBodWVSYW5nZSxcbiAgICAgIGxvd2VyQm91bmRzOiBsb3dlckJvdW5kcyxcbiAgICAgIHNhdHVyYXRpb25SYW5nZTogW3NNaW4sIHNNYXhdLFxuICAgICAgYnJpZ2h0bmVzc1JhbmdlOiBbYk1pbiwgYk1heF1cbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbG9hZENvbG9yQm91bmRzKCkge1xuXG4gICAgZGVmaW5lQ29sb3IoJ21vbm9jaHJvbWUnLCBudWxsLCBbWzAsIDBdLCBbMTAwLCAwXV0pO1xuXG4gICAgZGVmaW5lQ29sb3IoJ3JlZCcsIFstMjYsIDE4XSwgW1syMCwgMTAwXSwgWzMwLCA5Ml0sIFs0MCwgODldLCBbNTAsIDg1XSwgWzYwLCA3OF0sIFs3MCwgNzBdLCBbODAsIDYwXSwgWzkwLCA1NV0sIFsxMDAsIDUwXV0pO1xuXG4gICAgZGVmaW5lQ29sb3IoJ29yYW5nZScsIFsxOSwgNDZdLCBbWzIwLCAxMDBdLCBbMzAsIDkzXSwgWzQwLCA4OF0sIFs1MCwgODZdLCBbNjAsIDg1XSwgWzcwLCA3MF0sIFsxMDAsIDcwXV0pO1xuXG4gICAgZGVmaW5lQ29sb3IoJ3llbGxvdycsIFs0NywgNjJdLCBbWzI1LCAxMDBdLCBbNDAsIDk0XSwgWzUwLCA4OV0sIFs2MCwgODZdLCBbNzAsIDg0XSwgWzgwLCA4Ml0sIFs5MCwgODBdLCBbMTAwLCA3NV1dKTtcblxuICAgIGRlZmluZUNvbG9yKCdncmVlbicsIFs2MywgMTc4XSwgW1szMCwgMTAwXSwgWzQwLCA5MF0sIFs1MCwgODVdLCBbNjAsIDgxXSwgWzcwLCA3NF0sIFs4MCwgNjRdLCBbOTAsIDUwXSwgWzEwMCwgNDBdXSk7XG5cbiAgICBkZWZpbmVDb2xvcignYmx1ZScsIFsxNzksIDI1N10sIFtbMjAsIDEwMF0sIFszMCwgODZdLCBbNDAsIDgwXSwgWzUwLCA3NF0sIFs2MCwgNjBdLCBbNzAsIDUyXSwgWzgwLCA0NF0sIFs5MCwgMzldLCBbMTAwLCAzNV1dKTtcblxuICAgIGRlZmluZUNvbG9yKCdwdXJwbGUnLCBbMjU4LCAyODJdLCBbWzIwLCAxMDBdLCBbMzAsIDg3XSwgWzQwLCA3OV0sIFs1MCwgNzBdLCBbNjAsIDY1XSwgWzcwLCA1OV0sIFs4MCwgNTJdLCBbOTAsIDQ1XSwgWzEwMCwgNDJdXSk7XG5cbiAgICBkZWZpbmVDb2xvcigncGluaycsIFsyODMsIDMzNF0sIFtbMjAsIDEwMF0sIFszMCwgOTBdLCBbNDAsIDg2XSwgWzYwLCA4NF0sIFs4MCwgODBdLCBbOTAsIDc1XSwgWzEwMCwgNzNdXSk7XG4gIH1cblxuICBmdW5jdGlvbiBIU1Z0b1JHQihoc3YpIHtcblxuICAgIC8vIHRoaXMgZG9lc24ndCB3b3JrIGZvciB0aGUgdmFsdWVzIG9mIDAgYW5kIDM2MFxuICAgIC8vIGhlcmUncyB0aGUgaGFja3kgZml4XG4gICAgdmFyIGggPSBoc3ZbMF07XG4gICAgaWYgKGggPT09IDApIHtcbiAgICAgIGggPSAxO1xuICAgIH1cbiAgICBpZiAoaCA9PT0gMzYwKSB7XG4gICAgICBoID0gMzU5O1xuICAgIH1cblxuICAgIC8vIFJlYmFzZSB0aGUgaCxzLHYgdmFsdWVzXG4gICAgaCA9IGggLyAzNjA7XG4gICAgdmFyIHMgPSBoc3ZbMV0gLyAxMDAsXG4gICAgICAgIHYgPSBoc3ZbMl0gLyAxMDA7XG5cbiAgICB2YXIgaF9pID0gTWF0aC5mbG9vcihoICogNiksXG4gICAgICAgIGYgPSBoICogNiAtIGhfaSxcbiAgICAgICAgcCA9IHYgKiAoMSAtIHMpLFxuICAgICAgICBxID0gdiAqICgxIC0gZiAqIHMpLFxuICAgICAgICB0ID0gdiAqICgxIC0gKDEgLSBmKSAqIHMpLFxuICAgICAgICByID0gMjU2LFxuICAgICAgICBnID0gMjU2LFxuICAgICAgICBiID0gMjU2O1xuXG4gICAgc3dpdGNoIChoX2kpIHtcbiAgICAgIGNhc2UgMDpcbiAgICAgICAgciA9IHY7XG4gICAgICAgIGcgPSB0O1xuICAgICAgICBiID0gcDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHIgPSBxO1xuICAgICAgICBnID0gdjtcbiAgICAgICAgYiA9IHA7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAyOlxuICAgICAgICByID0gcDtcbiAgICAgICAgZyA9IHY7XG4gICAgICAgIGIgPSB0O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMzpcbiAgICAgICAgciA9IHA7XG4gICAgICAgIGcgPSBxO1xuICAgICAgICBiID0gdjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDQ6XG4gICAgICAgIHIgPSB0O1xuICAgICAgICBnID0gcDtcbiAgICAgICAgYiA9IHY7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSA1OlxuICAgICAgICByID0gdjtcbiAgICAgICAgZyA9IHA7XG4gICAgICAgIGIgPSBxO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICB2YXIgcmVzdWx0ID0gW01hdGguZmxvb3IociAqIDI1NSksIE1hdGguZmxvb3IoZyAqIDI1NSksIE1hdGguZmxvb3IoYiAqIDI1NSldO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBmdW5jdGlvbiBIZXhUb0hTQihoZXgpIHtcbiAgICBoZXggPSBoZXgucmVwbGFjZSgvXiMvLCAnJyk7XG4gICAgaGV4ID0gaGV4Lmxlbmd0aCA9PT0gMyA/IGhleC5yZXBsYWNlKC8oLikvZywgJyQxJDEnKSA6IGhleDtcblxuICAgIHZhciByZWQgPSBwYXJzZUludChoZXguc3Vic3RyKDAsIDIpLCAxNikgLyAyNTUsXG4gICAgICAgIGdyZWVuID0gcGFyc2VJbnQoaGV4LnN1YnN0cigyLCAyKSwgMTYpIC8gMjU1LFxuICAgICAgICBibHVlID0gcGFyc2VJbnQoaGV4LnN1YnN0cig0LCAyKSwgMTYpIC8gMjU1O1xuXG4gICAgdmFyIGNNYXggPSBNYXRoLm1heChyZWQsIGdyZWVuLCBibHVlKSxcbiAgICAgICAgZGVsdGEgPSBjTWF4IC0gTWF0aC5taW4ocmVkLCBncmVlbiwgYmx1ZSksXG4gICAgICAgIHNhdHVyYXRpb24gPSBjTWF4ID8gZGVsdGEgLyBjTWF4IDogMDtcblxuICAgIHN3aXRjaCAoY01heCkge1xuICAgICAgY2FzZSByZWQ6XG4gICAgICAgIHJldHVybiBbNjAgKiAoKGdyZWVuIC0gYmx1ZSkgLyBkZWx0YSAlIDYpIHx8IDAsIHNhdHVyYXRpb24sIGNNYXhdO1xuICAgICAgY2FzZSBncmVlbjpcbiAgICAgICAgcmV0dXJuIFs2MCAqICgoYmx1ZSAtIHJlZCkgLyBkZWx0YSArIDIpIHx8IDAsIHNhdHVyYXRpb24sIGNNYXhdO1xuICAgICAgY2FzZSBibHVlOlxuICAgICAgICByZXR1cm4gWzYwICogKChyZWQgLSBncmVlbikgLyBkZWx0YSArIDQpIHx8IDAsIHNhdHVyYXRpb24sIGNNYXhdO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIEhTVnRvSFNMKGhzdikge1xuICAgIHZhciBoID0gaHN2WzBdLFxuICAgICAgICBzID0gaHN2WzFdIC8gMTAwLFxuICAgICAgICB2ID0gaHN2WzJdIC8gMTAwLFxuICAgICAgICBrID0gKDIgLSBzKSAqIHY7XG5cbiAgICByZXR1cm4gW2gsIE1hdGgucm91bmQocyAqIHYgLyAoayA8IDEgPyBrIDogMiAtIGspICogMTAwMDApIC8gMTAwLCBrIC8gMiAqIDEwMF07XG4gIH1cblxuICBmdW5jdGlvbiBzdHJpbmdUb0ludGVnZXIoc3RyaW5nKSB7XG4gICAgdmFyIHRvdGFsID0gMDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSAhPT0gc3RyaW5nLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodG90YWwgPj0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpIGJyZWFrO1xuICAgICAgdG90YWwgKz0gc3RyaW5nLmNoYXJDb2RlQXQoaSk7XG4gICAgfVxuICAgIHJldHVybiB0b3RhbDtcbiAgfVxuXG4gIHJldHVybiByYW5kb21Db2xvcjtcbn0pOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0EsV0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///1\\n\")},function(module,exports){eval('module.exports = function(module) {\\n\\tif (!module.webpackPolyfill) {\\n\\t\\tmodule.deprecate = function() {};\\n\\t\\tmodule.paths = [];\\n\\t\\t// module.parent = undefined by default\\n\\t\\tif (!module.children) module.children = [];\\n\\t\\tObject.defineProperty(module, \"loaded\", {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tget: function() {\\n\\t\\t\\t\\treturn module.l;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tObject.defineProperty(module, \"id\", {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tget: function() {\\n\\t\\t\\t\\treturn module.i;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\tmodule.webpackPolyfill = 1;\\n\\t}\\n\\treturn module;\\n};\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanM/Y2VkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuXHRpZiAoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///2\\n')}]]);","extractedComments":[]}