{"map":"{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\"}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(module,exports,__webpack_require__){\"use strict\";eval(\"// Util\\n\\n\\n\\nmodule.exports = function () {\\n  window.__internalClock = {\\n    fps: 30,\\n    fpsInterval: null,\\n    startTime: null,\\n    now: null,\\n    then: null,\\n    elapsed: null,\\n    frameCount: 0,\\n    currentFPS: 0,\\n    stop: false\\n  };\\n\\n  window.__requestFrame = function () {\\n    if (window.__internalClock.stop) return;\\n    window.requestAnimationFrame(window.__requestFrame);\\n    window.__internalClock.now = Date.now();\\n    window.__internalClock.elapsed = window.__internalClock.now - window.__internalClock.then;\\n    if (window.__internalClock.elapsed > window.__internalClock.fpsInterval) {\\n      window.__internalClock.then = window.__internalClock.now - window.__internalClock.elapsed % window.__internalClock.fpsInterval;\\n      var sinceStart = window.__internalClock.now - window.__internalClock.startTime;\\n      window.__internalClock.currentFPS = Math.round(1000 / (sinceStart / ++window.__internalClock.frameCount) * 100) / 100;\\n      if (typeof window.__draw === 'function') window.__draw();\\n    }\\n  };\\n\\n  // Screen Update at specified framerate\\n  window.__update = function () {\\n    var fps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.__internalClock.fps;\\n\\n    window.__internalClock.fpsInterval = 1000 / fps;\\n    window.__internalClock.then = Date.now();\\n    window.__internalClock.startTime = window.__internalClock.then;\\n    window.__requestFrame();\\n  };\\n}();//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9fcHVibGljL1V0aWwuanM/YTBiNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVdGlsXG5cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHdpbmRvdy5fX2ludGVybmFsQ2xvY2sgPSB7XG4gICAgZnBzOiAzMCxcbiAgICBmcHNJbnRlcnZhbDogbnVsbCxcbiAgICBzdGFydFRpbWU6IG51bGwsXG4gICAgbm93OiBudWxsLFxuICAgIHRoZW46IG51bGwsXG4gICAgZWxhcHNlZDogbnVsbCxcbiAgICBmcmFtZUNvdW50OiAwLFxuICAgIGN1cnJlbnRGUFM6IDAsXG4gICAgc3RvcDogZmFsc2VcbiAgfTtcblxuICB3aW5kb3cuX19yZXF1ZXN0RnJhbWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHdpbmRvdy5fX2ludGVybmFsQ2xvY2suc3RvcCkgcmV0dXJuO1xuICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUod2luZG93Ll9fcmVxdWVzdEZyYW1lKTtcbiAgICB3aW5kb3cuX19pbnRlcm5hbENsb2NrLm5vdyA9IERhdGUubm93KCk7XG4gICAgd2luZG93Ll9faW50ZXJuYWxDbG9jay5lbGFwc2VkID0gd2luZG93Ll9faW50ZXJuYWxDbG9jay5ub3cgLSB3aW5kb3cuX19pbnRlcm5hbENsb2NrLnRoZW47XG4gICAgaWYgKHdpbmRvdy5fX2ludGVybmFsQ2xvY2suZWxhcHNlZCA+IHdpbmRvdy5fX2ludGVybmFsQ2xvY2suZnBzSW50ZXJ2YWwpIHtcbiAgICAgIHdpbmRvdy5fX2ludGVybmFsQ2xvY2sudGhlbiA9IHdpbmRvdy5fX2ludGVybmFsQ2xvY2subm93IC0gd2luZG93Ll9faW50ZXJuYWxDbG9jay5lbGFwc2VkICUgd2luZG93Ll9faW50ZXJuYWxDbG9jay5mcHNJbnRlcnZhbDtcbiAgICAgIHZhciBzaW5jZVN0YXJ0ID0gd2luZG93Ll9faW50ZXJuYWxDbG9jay5ub3cgLSB3aW5kb3cuX19pbnRlcm5hbENsb2NrLnN0YXJ0VGltZTtcbiAgICAgIHdpbmRvdy5fX2ludGVybmFsQ2xvY2suY3VycmVudEZQUyA9IE1hdGgucm91bmQoMTAwMCAvIChzaW5jZVN0YXJ0IC8gKyt3aW5kb3cuX19pbnRlcm5hbENsb2NrLmZyYW1lQ291bnQpICogMTAwKSAvIDEwMDtcbiAgICAgIGlmICh0eXBlb2Ygd2luZG93Ll9fZHJhdyA9PT0gJ2Z1bmN0aW9uJykgd2luZG93Ll9fZHJhdygpO1xuICAgIH1cbiAgfTtcblxuICAvLyBTY3JlZW4gVXBkYXRlIGF0IHNwZWNpZmllZCBmcmFtZXJhdGVcbiAgd2luZG93Ll9fdXBkYXRlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBmcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHdpbmRvdy5fX2ludGVybmFsQ2xvY2suZnBzO1xuXG4gICAgd2luZG93Ll9faW50ZXJuYWxDbG9jay5mcHNJbnRlcnZhbCA9IDEwMDAgLyBmcHM7XG4gICAgd2luZG93Ll9faW50ZXJuYWxDbG9jay50aGVuID0gRGF0ZS5ub3coKTtcbiAgICB3aW5kb3cuX19pbnRlcm5hbENsb2NrLnN0YXJ0VGltZSA9IHdpbmRvdy5fX2ludGVybmFsQ2xvY2sudGhlbjtcbiAgICB3aW5kb3cuX19yZXF1ZXN0RnJhbWUoKTtcbiAgfTtcbn0oKTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///10\\n\")},13:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\n__webpack_require__(12);\\n\\nvar _background = __webpack_require__(19);\\n\\nvar _background2 = _interopRequireDefault(_background);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// Author: Kaden Griffith\\n// Descr : Window Functions\\n\\nvar $ = __webpack_require__(0)(),\\n    Util = __webpack_require__(10);\\n\\n__webpack_require__(11);\\n\\n__webpack_require__.e(/* import() | navigator.response */ 8).then(__webpack_require__.t.bind(null, 9, 7));\\n__webpack_require__.e(/* import() | randomColor */ 7).then(__webpack_require__.t.bind(null, 1, 7));\\n\\nmodule.exports = function () {\\n  window.__draw = function () {\\n    verifyOrientation();\\n    $$.fullscreen = isFullscreen();\\n    // Make main the correct size\\n    if ($$.fullscreen || !isMobile()) {\\n      $.get('.main').style.height = window.innerHeight - 40 + 'px';\\n      $.get('.kaden-logo').style.height = window.innerHeight - 40 + 'px';\\n    } else {\\n      $.get('.main').style.height = window.innerHeight + 'px';\\n      $.get('.kaden-logo').style.height = window.innerHeight + 'px';\\n    }\\n    // This is the statusbar fix using 30 fps update\\n    if (isStandalone() && $$.fullscreen) {\\n      if ($$.deviceOrientation === 'portrait') {\\n        $.get('.main').style.height = $$.deviceHeight - 80 + 'px';\\n        $.get('.kaden-logo').style.height = $.get('.main').style.height;\\n        $.get('.head-spacer').style.height = '80px';\\n        $.get('.nav').style.top = '-120px';\\n      } else {\\n        $.get('.main').style.height = $$.deviceWidth - 40 + 'px';\\n        $.get('.kaden-logo').style.height = $.get('.main').style.height;\\n        $.get('.head-spacer').style.height = '40px';\\n        $.get('.nav').style.top = '-160px';\\n      }\\n      $.get('#popover').style.top = '14%';\\n    }\\n\\n    fadeBackground(window.scrollY);\\n\\n    if ($$.app_debug) {\\n      $.clear($.get('.footer-link-area'));\\n      $.add($.get('.footer-link-area'), '<div>fps: ' + window.__internalClock.currentFPS + '</div>');\\n      for (var prop in $$) {\\n        $.add($.get('.footer-link-area'), '<div>' + prop + ': ' + $$[prop] + '</div>');\\n      }\\n      $.add($.get('.footer-link-area'), '<div>windowWidth: ' + window.innerWidth + '</div><div>windowHeight: ' + window.innerHeight + '</div>');\\n    }\\n  };\\n\\n  window.addEventListener('beforeinstallprompt', function (e) {\\n    e.preventDefault();\\n    $$.installPrompt = e;\\n  });\\n\\n  window.toggleMenu = function (state) {\\n    var topMin = isStandalone() && $$.fullscreen ? '40px' : '0';\\n    if (state) {\\n      $.get('.menu').style.display = 'block';\\n      setTimeout(function () {\\n        $.get('.menu').style.top = topMin;\\n        setTimeout(function () {\\n          $.get('.menuCue-off').style.display = 'block';\\n        }, 75);\\n        setTimeout(function () {\\n          $.get('#wrapper').style.display = 'none';\\n        }, 200);\\n      }, 20);\\n    } else {\\n      $.get('#wrapper').style.background = 'url(' + _background2.default + ') no-repeat';\\n      $.get('#wrapper').style.backgroundSize = 'cover';\\n      $.get('#wrapper').style.backgroundPosition = 'top';\\n      $.get('#wrapper').style.backgroundAttachment = 'fixed';\\n      $.get('#wrapper').style.display = 'block';\\n      setTimeout(function () {\\n        $.get('.menu').style.top = '100%';\\n      }, 185);\\n      setTimeout(function () {\\n        $.get('.menuCue-off').style.display = 'none';\\n        $.get('.menu').style.display = 'none';\\n      }, 300);\\n      setTimeout(function () {\\n        $.get('.menu').style.display = 'none';\\n      }, 325);\\n    }\\n  };\\n\\n  window.hidePopover = function () {\\n    $.get('#wrapper').style.position = 'absolute';\\n    $.get('.project-scroller-container').style.overflowY = 'scroll';\\n    $.get('#popover').style.overflowY = 'scroll';\\n    $.get('#popover').display = 'none';\\n    $.get('#popover').innerHTML = '';\\n  };\\n\\n  window.beg = function () {\\n    toggleMenu(false);\\n    displayPopover($.getElement({\\n      class: 'amount',\\n      contains: $.getElement({\\n        class: 'amount-main',\\n        contains: $.getElement({\\n          class: 'amount-up',\\n          onclick: \\\"javascript:amountUp();\\\",\\n          contains: $.icon({\\n            icon: 'arrow-up'\\n          })\\n        }) + $.icon({\\n          icon: 'dollar-sign',\\n          style: 'font-size:32px;'\\n        }) + $.getElement({\\n          class: 'amount-text',\\n          contains: '5.00'\\n        }) + $.getElement({\\n          class: 'amount-down',\\n          onclick: \\\"javascript:amountDown();\\\",\\n          contains: $.icon({\\n            icon: 'arrow-down'\\n          })\\n        }) + $.getElement({\\n          class: 'amount-array',\\n          contains: $.getElement({\\n            class: 'amount-option',\\n            onclick: \\\"javascript:amountChoose(`5.00`);\\\",\\n            contains: $.icon({\\n              icon: 'dollar-sign'\\n            }) + '5.00'\\n          }) + $.getElement({\\n            class: 'amount-option',\\n            onclick: \\\"javascript:amountChoose(`10.00`);\\\",\\n            contains: $.icon({\\n              icon: 'dollar-sign'\\n            }) + '10.00'\\n          }) + $.getElement({\\n            class: 'amount-option',\\n            onclick: \\\"javascript:amountChoose(`20.00`);\\\",\\n            contains: $.icon({\\n              icon: 'dollar-sign'\\n            }) + '20.00'\\n          }) + $.getElement({\\n            class: 'amount-option',\\n            onclick: \\\"javascript:amountChoose(`50.00`);\\\",\\n            contains: $.icon({\\n              icon: 'dollar-sign'\\n            }) + '50.00'\\n          }) + $.getElement({\\n            class: 'amount-option',\\n            onclick: \\\"javascript:amountChoose(`100.00`);\\\",\\n            contains: $.icon({\\n              icon: 'dollar-sign'\\n            }) + '100.00'\\n          }) + $.getElement({\\n            class: 'amount-option',\\n            onclick: \\\"javascript:amountChoose(`1000.00`);\\\",\\n            contains: $.icon({\\n              icon: 'dollar-sign'\\n            }) + '1000.00'\\n          })\\n        })\\n      })\\n    }) + $.getElement({\\n      id: 'paypal-container'\\n    }));\\n    var amt = Number($.get('.amount-text').innerHTML);\\n    paypal.Button.render({\\n      env: 'production',\\n      style: {\\n        layout: 'vertical',\\n        size: 'medium',\\n        shape: 'rect',\\n        color: 'silver'\\n      },\\n      funding: {\\n        allowed: [paypal.FUNDING.CARD, paypal.FUNDING.CREDIT]\\n      },\\n      client: {\\n        sandbox: 'ASrkKYmRH3eD027wqYDAbaHwVwwKrFU3_M2kyLB2oeHcdyLgW7_s30YQaMQA7DniO9WghPsSrPegvXKu',\\n        production: 'ARzt2LSntzEGwv_djVtWEeGNv8L7gOEb4fh1QzjdLZywIcDZ3HMUMLRPJW1CWuyHo5Ko5_qJDukJZBW1'\\n      },\\n      payment: function payment(data, actions) {\\n        return actions.payment.create({\\n          payment: {\\n            transactions: [{\\n              amount: {\\n                total: amt,\\n                currency: 'USD'\\n              },\\n              description: 'Coffee Money'\\n            }]\\n          }\\n        });\\n      },\\n      onAuthorize: function onAuthorize(data, actions) {\\n        return actions.payment.execute().then(function () {\\n          hidePopover();\\n          displayPopover('Thank you for being awesome!');\\n        });\\n      }\\n    }, '#paypal-container');\\n  };\\n\\n  window.amountDown = function () {\\n    var _inc = $.get('.amount-text').innerHTML.length > 4 ? 1 : 0.1;\\n    _inc = $.get('.amount-text').innerHTML.length > 5 && $.get('.amount-text').innerHTML != 100 ? 10 : _inc;\\n    _inc = $.get('.amount-text').innerHTML.length > 6 && $.get('.amount-text').innerHTML != 1000 ? 100 : _inc;\\n    $.get('.amount-text').innerHTML = Number($.get('.amount-text').innerHTML) > 4.2 ? parseFloat($.get('.amount-text').innerHTML - _inc).toFixed(2) : '4.20';\\n  };\\n\\n  window.amountUp = function () {\\n    var _inc = $.get('.amount-text').innerHTML.length > 4 ? 1 : 0.1;\\n    _inc = $.get('.amount-text').innerHTML.length > 5 ? 10 : _inc;\\n    _inc = $.get('.amount-text').innerHTML.length > 6 ? 100 : _inc;\\n    $.get('.amount-text').innerHTML = parseFloat(Number($.get('.amount-text').innerHTML) + _inc).toFixed(2);\\n  };\\n\\n  window.amountChoose = function (_amt) {\\n    $.get('.amount-text').innerHTML = parseFloat(Number(_amt)).toFixed(2);\\n  };\\n\\n  window.openNewEmail = function () {\\n    displayPopover($.getElement({\\n      class: 'fake-a-hello',\\n      contains: 'Hey, what\\\\'s up?'\\n    }) + $.getElement({\\n      tag: 'textarea',\\n      required: 'true',\\n      placeholder: 'Message',\\n      id: 'email-message',\\n      class: 'textbox'\\n    }) + $.getElement({\\n      onclick: \\\"javascript:sendMail();\\\",\\n      class: 'email-btn',\\n      contains: 'Send'\\n    }));\\n  };\\n\\n  window.sendMail = function () {\\n    window.location.href = 'mailto:kadengriffith@gmail.com?subject=I\\\\'ve seen your work... I\\\\'ve never been more blown away in my life.&body=' + $.get('#email-message').value;\\n    window.hidePopover();\\n  };\\n\\n  window.run = function (options) {\\n    var _project = grabProject(options.project);\\n    if (_project) {\\n      displayPopover($.getElement({\\n        tag: 'canvas',\\n        height: '300px',\\n        width: '300px',\\n        id: _project.name.replace(/\\\\ /g, '_'),\\n        class: 'canvas'\\n      }) + $.getElement({\\n        class: 'demo-date',\\n        contains: 'Date Created: ' + _project.date\\n      }) + $.getElement({\\n        class: 'demo-addons'\\n      }) + $.getElement({\\n        class: 'demo-code',\\n        contains: _project.src\\n      }));\\n      var _p = C.projects.filter(function (project) {\\n        return project.name.match(_project.name);\\n      })[0].name;\\n      if (/fractal pattern generation/gi.test(_p)) __webpack_require__.e(/* import() | p1 */ 6).then(__webpack_require__.t.bind(null, 8, 7)).then(function (p1) {\\n        return p1.Project1();\\n      });\\n      if (/automated pong/gi.test(_p)) __webpack_require__.e(/* import() | p2 */ 5).then(__webpack_require__.t.bind(null, 7, 7)).then(function (p2) {\\n        return p2.Project2();\\n      });\\n      if (/simple math game/gi.test(_p)) __webpack_require__.e(/* import() | p3 */ 4).then(__webpack_require__.t.bind(null, 6, 7)).then(function (p3) {\\n        return p3.Project3();\\n      });\\n      if (/guess the number/gi.test(_p)) __webpack_require__.e(/* import() | p4 */ 3).then(__webpack_require__.t.bind(null, 5, 7)).then(function (p4) {\\n        return p4.Project4();\\n      });\\n      if (/snake/gi.test(_p)) __webpack_require__.e(/* import() | p5 */ 2).then(__webpack_require__.t.bind(null, 4, 7)).then(function (p5) {\\n        return p5.Project5();\\n      });\\n      if (/color viewer/gi.test(_p)) __webpack_require__.e(/* import() | p6 */ 1).then(__webpack_require__.t.bind(null, 3, 7)).then(function (p6) {\\n        return p6.Project6();\\n      });\\n    }\\n  };\\n\\n  window.download = function () {\\n    $$.installPrompt.prompt();\\n  };\\n\\n  // Shows overlay screen\\n  function displayPopover(contains) {\\n    $.get('#popover').innerHTML = $.getElement({\\n      class: 'popoverCue-off',\\n      onclick: \\\"javascript:hidePopover();\\\",\\n      contains: $.icon({\\n        icon: 'times'\\n      })\\n    }) + $.getElement({\\n      class: 'popover-content',\\n      contains: contains\\n    });\\n    $.get('#popover').display = 'block';\\n  }\\n\\n  function grabProject(_p) {\\n    var _project = '';\\n    if (/fractal pattern generation/gi.test(_p)) _project = '// Author: Kaden Griffith\\\\n// Descr : Shape Recursion\\\\n\\\\nconst  = require(kbrew_hypertxt)(),\\\\n  rc = require(./assets/lib/randomColor);\\\\n\\\\nmodule.exports = \\\\n  Project1: () => \\\\n    use strict;\\\\n\\\\n    const canvasName = #Fractal_Pattern_Generation;\\\\n\\\\n    if(!.get(canvasName)) return;\\\\n\\\\n    fixHtml();\\\\n\\\\n    let canvas = .get(canvasName),\\\\n      ctx = canvas.getContext(2d),\\\\n      framerate = Math.floor(1000 / 60),\\\\n      bgColor,\\\\n      seconds = 0,\\\\n      seconds_half = 0,\\\\n      paused_state = false,\\\\n      speed = 200,\\\\n      color_options = null;\\\\n\\\\n    let percentile_right,\\\\n      percentile_left,\\\\n      percentile_down,\\\\n      percentile_up,\\\\n      percentile_rand1;\\\\n\\\\n    let diameter_factor,\\\\n      initial_d_value,\\\\n      minimum_diameter;\\\\n\\\\n    let Circle,\\\\n      Square,\\\\n      Hourglass,\\\\n      Bowtie,\\\\n      Cross,\\\\n      Diagonal_1,\\\\n      Diagonal_2;\\\\n\\\\n    .get(.button_play).style.backgroundColor = #C0D890;\\\\n    .get(.button_play).style.color = #333;\\\\n    setInterval(update, framerate);\\\\n\\\\n    function update() \\\\n      if(!.get(canvasName)) return;\\\\n      if(!paused_state) \\\\n        bgColor = .get(#BgColor).value.length > 0 ? .get(#BgColor).value.toLowerCase() : black;\\\\n        initial_d_value = .get(#InitialD).value;\\\\n\\\\n        color_options = \\\\n          hue: .get(#Hue).value.length > 0 ? .get(#Hue).value.toLowerCase() : ,\\\\n          luminosity: .get(#Luminosity).value.length > 0 ? .get(#Luminosity).value.toLowerCase() : ,\\\\n          alpha: 1\\\\n        ;\\\\n\\\\n        diameter_factor = Number(.get(#Diameterfactor).value) * 0.01;\\\\n        minimum_diameter = .get(#MinDiameter).value;\\\\n\\\\n        percentile_right = .get(#Right).value;\\\\n        percentile_left = .get(#Left).value;\\\\n        percentile_down = .get(#Down).value;\\\\n        percentile_up = .get(#Up).value;\\\\n        percentile_rand1 = .get(#Random).value;\\\\n\\\\n        Circle = .get(#Circle).value;\\\\n        Square = .get(#Square).value;\\\\n        Hourglass = .get(#Hourglass).value;\\\\n        Bowtie = .get(#Bowtie).value;\\\\n        Cross = .get(#Cross).value;\\\\n        Diagonal_1 = .get(#Diagonal_1).value;\\\\n        Diagonal_2 = .get(#Diagonal_2).value;\\\\n\\\\n        drawShape(canvas.width / 2, canvas.height / 2, initial_d_value);\\\\n      \\\\n    \\\\n\\\\n    function drawShape(x, y, d) \\\\n      if(d === initial_d_value) \\\\n        ctx.fillStyle = bgColor;\\\\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\\\\n      \\\\n\\\\n      ctx.beginPath();\\\\n      ctx.strokeStyle = rc.randomColor(color_options);\\\\n\\\\n      if(getRandomInt(0, 100) >= (100 - Square)) \\\\n        ctx.rect(x - (d / 2), y - (d / 2), d, d);\\\\n       else if(getRandomInt(0, 100) >= (100 - Hourglass)) \\\\n        ctx.beginPath();\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x - (d / 2), y + (d / 2));\\\\n        ctx.lineTo(x + (d / 2), y + (d / 2));\\\\n        ctx.lineTo(x - (d / 2), y - (d / 2));\\\\n        ctx.lineTo(x + (d / 2), y - (d / 2));\\\\n        ctx.closePath();\\\\n       else if(getRandomInt(0, 100) >= (100 - Cross)) \\\\n        ctx.beginPath();\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x - (d / 2), y + (d / 2));\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x + (d / 2), y + (d / 2));\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x - (d / 2), y - (d / 2));\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x + (d / 2), y - (d / 2));\\\\n       else if(getRandomInt(0, 100) >= (100 - Diagonal_1)) \\\\n        ctx.beginPath();\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x - (d / 2), y + (d / 2));\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x + (d / 2), y - (d / 2));\\\\n       else if(getRandomInt(0, 100) >= (100 - Diagonal_2)) \\\\n        ctx.beginPath();\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x - (d / 2), y - (d / 2));\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x + (d / 2), y + (d / 2));\\\\n       else if(getRandomInt(0, 100) >= (100 - Bowtie)) \\\\n        ctx.beginPath();\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x - (d / 2), y - (d / 2));\\\\n        ctx.lineTo(x - (d / 2), y + (d / 2));\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x + (d / 2), y - (d / 2));\\\\n        ctx.lineTo(x + (d / 2), y + (d / 2));\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x + (d / 2), y + (d / 2));\\\\n        ctx.moveTo(x, y);\\\\n        ctx.lineTo(x - (d / 2), y + (d / 2));\\\\n       else if(getRandomInt(0, 100) >= (100 - Circle)) \\\\n        ctx.ellipse(x, y, (d / 2), (d / 2), 2 * Math.PI, 0, 2 * Math.PI);\\\\n      \\\\n\\\\n      ctx.stroke();\\\\n\\\\n      if(d > minimum_diameter) \\\\n        if(getRandomInt(0, 100) >= (100 - percentile_right)) \\\\n          drawShape(x + (d * diameter_factor), y, d * diameter_factor);\\\\n         // Right\\\\n        if(getRandomInt(0, 100) >= (100 - percentile_left)) \\\\n          drawShape(x - (d * diameter_factor), y, d * diameter_factor);\\\\n         // Left\\\\n        if(getRandomInt(0, 100) >= (100 - percentile_up)) \\\\n          drawShape(x, y - (d * diameter_factor), d * diameter_factor);\\\\n         // Up\\\\n        if(getRandomInt(0, 100) >= (100 - percentile_down)) \\\\n          drawShape(x, y + (d * diameter_factor), d * diameter_factor);\\\\n         // Down\\\\n        if(getRandomInt(0, 100) >= (100 - percentile_rand1)) \\\\n          drawShape(getRandomInt(0, canvas.width), getRandomInt(0, canvas.height), d * diameter_factor);\\\\n         // Random 1\\\\n      \\\\n    \\\\n\\\\n    window.Pause = () => \\\\n      .get(.button_play).style.backgroundColor = transparent;\\\\n      .get(.button_pause).style.backgroundColor = #ED4337;\\\\n      .get(.button_pause).style.color = #333;\\\\n      .get(.button_play).style.color = #C0D890;\\\\n      paused_state = true;\\\\n    ;\\\\n\\\\n    window.Play = () => \\\\n      .get(.button_play).style.backgroundColor = #C0D890;\\\\n      .get(.button_play).style.color = #333;\\\\n      .get(.button_pause).style.backgroundColor = transparent;\\\\n      .get(.button_pause).style.color = #ED4337;\\\\n      paused_state = false;\\\\n    ;\\\\n\\\\n    window.PlusOneFrame = () => \\\\n      paused_state = true;\\\\n      setTimeout(Play, 10);\\\\n      setTimeout(Pause, framerate * 1.5);\\\\n    ;\\\\n\\\\n    function getRandomInt(min, max) \\\\n      return Math.floor(Math.random() * (Math.floor(max) - Math.ceil(min))) + Math.ceil(min);\\\\n    \\\\n  \\\\n;\\\\n\\\\nfunction fixHtml() \\\\n  .add(.get(.demo-addons), .getElement(\\\\n    class: button_play,\\\\n    onclick: javascript:Play();,\\\\n    contains: Play\\\\n  ) + .getElement(\\\\n    class: button_pause,\\\\n    onclick: javascript:Pause();,\\\\n    contains: Pause\\\\n  ) + .getElement(\\\\n    class: button-demo-extra,\\\\n    onclick: javascript:PlusOneFrame();,\\\\n    contains: Reframe\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: text,\\\\n    placeholder: Background Color ( color | hex ),\\\\n    id: BgColor\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: text,\\\\n    placeholder: Hue ( color | hex | monochrome ),\\\\n    id: Hue\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: text,\\\\n    placeholder: Luminocity ( bright | light | dark ),\\\\n    id: Luminosity\\\\n  ) + .getElement(\\\\n    contains: Zoom,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 1,\\\\n    max: 50,\\\\n    value: 50,\\\\n    class: demo-range demo-range_b,\\\\n    id: Diameterfactor\\\\n  ) + .getElement(\\\\n    contains: Reduction Factor,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 150,\\\\n    max: 950,\\\\n    value: 300,\\\\n    class: demo-range demo-range_b,\\\\n    id: InitialD\\\\n  ) + .getElement(\\\\n    contains: Miminum Diameter,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 10,\\\\n    max: 15,\\\\n    value: 10,\\\\n    class: demo-range demo-range_b,\\\\n    id: MinDiameter\\\\n  ) + .getElement(\\\\n    contains: Right,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range demo-range_g,\\\\n    id: Right,\\\\n    value: 100\\\\n  ) + .getElement(\\\\n    contains: Left,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range demo-range_g,\\\\n    id: Left,\\\\n    value: 100\\\\n  ) + .getElement(\\\\n    contains: Up,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range demo-range_g,\\\\n    id: Up\\\\n  ) + .getElement(\\\\n    contains: Down,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range demo-range_g,\\\\n    id: Down\\\\n  ) + .getElement(\\\\n    contains: Random Artifacts,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range demo-range_o,\\\\n    id: Random,\\\\n    value: 0\\\\n  ) + .getElement(\\\\n    contains: Circle,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range,\\\\n    id: Circle,\\\\n    value: 100\\\\n  ) + .getElement(\\\\n    contains: Square,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range,\\\\n    id: Square,\\\\n    value: 0\\\\n  ) + .getElement(\\\\n    contains: Hourglass,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range,\\\\n    id: Hourglass,\\\\n    value: 0\\\\n  ) + .getElement(\\\\n    contains: Bowtie,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range,\\\\n    id: Bowtie,\\\\n    value: 0\\\\n  ) + .getElement(\\\\n    contains: Cross,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range,\\\\n    id: Cross,\\\\n    value: 0\\\\n  ) + .getElement(\\\\n    contains: Diagonal 1,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range,\\\\n    id: Diagonal_1,\\\\n    value: 0\\\\n  ) + .getElement(\\\\n    contains: Diagonal 2,\\\\n    class: demo-label\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: range,\\\\n    min: 0,\\\\n    max: 100,\\\\n    class: demo-range,\\\\n    id: Diagonal_2,\\\\n    value: 0\\\\n  ));\\\\n';\\n    if (/automated pong/gi.test(_p)) _project = '// Author: Kaden Griffith\\\\n// Descr : Automated Pong\\\\n\\\\nconst  = require(kbrew_hypertxt)();\\\\n\\\\nmodule.exports = \\\\n  Project2: () => \\\\n    use strict;\\\\n\\\\n    const canvasName = #Automated_Pong;\\\\n\\\\n    if(!.get(canvasName)) return;\\\\n\\\\n    let canvas = .get(canvasName),\\\\n      ctx = canvas.getContext(2d),\\\\n      fontSize = 16,\\\\n      fontColor = #f4f4f4,\\\\n      xSpacing = 15,\\\\n      aiSpeed = 5.2,\\\\n      p1y, p2y, bx, by, yv,\\\\n      ph = 70,\\\\n      br = 6,\\\\n      pt = 8,\\\\n      dy = 0,\\\\n      xv = 9,\\\\n      score1 = 0,\\\\n      score2 = 0;\\\\n\\\\n    function getRandomInt(min, max) \\\\n      return Math.floor(Math.random() * (Math.floor(max) - Math.ceil(min))) + Math.ceil(min);\\\\n    \\\\n\\\\n    function reset_default() \\\\n      let dir = xv;\\\\n      if(dir < 0) \\\\n        bx = canvas.width / 4;\\\\n       else \\\\n        bx = 3 * canvas.width / 4;\\\\n      \\\\n      by = canvas.height / 2;\\\\n      xv = -xv;\\\\n      yv = getRandomInt(-3, 3);\\\\n    \\\\n\\\\n    function reset() \\\\n      p1y = canvas.height / 2 - ph / 2;\\\\n      p2y = canvas.height / 2 - ph / 2;\\\\n      bx = canvas.width / 2;\\\\n      by = canvas.height / 2;\\\\n      xv = -xv;\\\\n      yv = getRandomInt(-3, 3);\\\\n    \\\\n\\\\n    function update() \\\\n      if(Math.abs(yv) < 0.5) \\\\n        yv = getRandomInt(-3, 3);\\\\n      \\\\n\\\\n      if(by < br && yv < 0) \\\\n        yv = -yv;\\\\n      \\\\n\\\\n      if(by > canvas.height - br && yv > 0) \\\\n        yv = -yv;\\\\n      \\\\n\\\\n      if(p1y < 0) \\\\n        p1y = 0;\\\\n      \\\\n\\\\n      if(p2y < 0) \\\\n        p2y = 0;\\\\n      \\\\n\\\\n      if(p1y + ph > canvas.height) \\\\n        p1y = canvas.height - ph;\\\\n      \\\\n\\\\n      if(p2y + ph > canvas.height) \\\\n        p2y = canvas.height - ph;\\\\n      \\\\n\\\\n      if(bx < xSpacing + (2 * br) + pt) \\\\n        if(by > p1y && by <= p1y + ph) \\\\n          xv = -xv;\\\\n          dy = by - (p1y + ph / 2);\\\\n          yv = dy * (0.4);\\\\n         else if(bx < xSpacing) \\\\n          score2++;\\\\n          reset_default();\\\\n        \\\\n      \\\\n\\\\n      if(bx > (canvas.width - xSpacing) - pt - (br / 2)) \\\\n        if(by > p2y && by <= p2y + ph) \\\\n          xv = -xv;\\\\n          dy = by - (p2y + ph / 2);\\\\n          yv = dy * (0.4);\\\\n         else if(bx > canvas.width - xSpacing) \\\\n          score1++;\\\\n          reset_default();\\\\n        \\\\n      \\\\n\\\\n      bx += xv;\\\\n      by += yv;\\\\n\\\\n      //player on the left\\\\n      if(p1y + ph / 2 < by && bx < 3 * canvas.width / 4) \\\\n        if(xv > 0) \\\\n          p1y += 0;\\\\n         else if(p1y < 0 || p1y + ph > canvas.height && (by > (p1y + ph / 8) && by < p1y + (ph - ph / 8))) \\\\n          p1y += (aiSpeed * 0.5);\\\\n         else if(by > (p1y + ph / 3) && by < p1y + (ph - ph / 3)) \\\\n          p1y += (aiSpeed * 0.2);\\\\n         else if(bx < canvas.width / 10) \\\\n          p1y += (aiSpeed * 0.75);\\\\n         else if(bx < 2 * canvas.width / 10 && bx > canvas.width / 10) \\\\n          p1y += (aiSpeed * 0.78);\\\\n         else \\\\n          p1y += (aiSpeed * 0.8);\\\\n        \\\\n       else if(p1y + ph / 2 > by && bx < 3 * canvas.width / 4) \\\\n        if(xv > 0) \\\\n          p1y -= 0;\\\\n         else if(p1y < 0 || p1y + ph > canvas.height && (by > (p1y + ph / 8) && by < p1y + (ph - ph / 8))) \\\\n          p1y -= (aiSpeed * 0.5);\\\\n         else if(by > (p1y + ph / 3) && by < p1y + (ph - ph / 3)) \\\\n          p1y -= (aiSpeed * 0.2);\\\\n         else if(bx < canvas.width / 10) \\\\n          p1y -= (aiSpeed * 0.75);\\\\n         else if(bx < 2 * canvas.width / 10 && bx > canvas.width / 10) \\\\n          p1y -= (aiSpeed * 0.78);\\\\n         else \\\\n          p1y -= (aiSpeed * 0.8);\\\\n        \\\\n      \\\\n\\\\n      //player on the right\\\\n      if(p2y + ph / 2 < by && bx > canvas.width / 4) \\\\n        if(xv < 0) \\\\n          p2y += 0;\\\\n         else if(p2y < 0 || p2y + ph > canvas.height && (by > (p2y + ph / 8) && by < p2y + (ph - ph / 8))) \\\\n          p2y += (aiSpeed * 0.5);\\\\n         else if(by > (p2y + ph / 3) && by < p2y + (ph - ph / 3)) \\\\n          p2y += (aiSpeed * 0.2);\\\\n         else if(bx > 9 * canvas.width / 10) \\\\n          p2y += (aiSpeed * 0.75);\\\\n         else if(bx > 8 * canvas.width / 10 && bx < 9 * canvas.width / 10) \\\\n          p2y += (aiSpeed * 0.78);\\\\n         else \\\\n          p2y += (aiSpeed * 0.8);\\\\n        \\\\n       else if(p2y + ph / 2 > by && bx > canvas.width / 4) \\\\n        if(xv < 0) \\\\n          p2y -= 0;\\\\n         else if(p2y < 0 || p2y + ph > canvas.height && (by > (p2y + ph / 8) && by < p2y + (ph - ph / 8))) \\\\n          p2y -= (aiSpeed * 0.5);\\\\n         else if(by > (p2y + ph / 3) && by < p2y + (ph - ph / 3)) \\\\n          p2y -= (aiSpeed * 0.2);\\\\n         else if(bx > 9 * canvas.width / 10) \\\\n          p2y -= (aiSpeed * 0.75);\\\\n         else if(bx > 8 * canvas.width / 10 && bx < 9 * canvas.width / 10) \\\\n          p2y -= (aiSpeed * 0.78);\\\\n         else \\\\n          p2y -= (aiSpeed * 0.8);\\\\n        \\\\n      \\\\n\\\\n      draw();\\\\n    \\\\n\\\\n    function draw() \\\\n      function fRect(x, y, w, h) \\\\n        x = parseInt(x);\\\\n        y = parseInt(y);\\\\n        ctx.fillRect(x, y, w, h);\\\\n      \\\\n\\\\n      ctx.fillStyle = black;\\\\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\\\\n      ctx.fillStyle = ctx.strokeStyle = fontColor;\\\\n      fRect(xSpacing, p1y, pt, ph);\\\\n      fRect(((canvas.width - pt) - xSpacing), p2y, pt, ph);\\\\n      ctx.font = fontSizepx Ubuntu;\\\\n      ctx.fillText(score1, 40, 30);\\\\n      ctx.fillText(score2, canvas.width - 50, 30);\\\\n      ctx.beginPath();\\\\n      ctx.ellipse(bx - br / 2, by - br / 2, br, br, 2 * Math.PI, Math.PI, 180);\\\\n      ctx.fill();\\\\n    \\\\n\\\\n    reset();\\\\n    setInterval(update, 1000 / 60);\\\\n  \\\\n;';\\n    if (/simple math game/gi.test(_p)) _project = '// Author: Kaden Griffith\\\\n// Descr : Simple Math Game\\\\n\\\\nconst  = require(kbrew_hypertxt)();\\\\n\\\\nmodule.exports = \\\\n  Project3: () => \\\\n    use strict;\\\\n\\\\n    const canvasName = #Simple_Math_Game;\\\\n\\\\n    if(!.get(canvasName)) return;\\\\n\\\\n    fixHtml();\\\\n\\\\n    window.addEventListener(keypress, (e) => \\\\n      keyPressed = e.key;\\\\n    );\\\\n\\\\n    let canvas = .get(canvasName),\\\\n      ctx = canvas.getContext(2d),\\\\n      textInitialPosition = 13,\\\\n      textIndent = 13,\\\\n      lineNumber = 1,\\\\n      fontSize = 16,\\\\n      fontColor = #f4f4f4,\\\\n      score = 0,\\\\n      point = [1, point],\\\\n      a,\\\\n      b,\\\\n      keyPressed,\\\\n      ops = [\\\\n          sign: +,\\\\n          method: (a, b) => a + b\\\\n        ,\\\\n        \\\\n          sign: -,\\\\n          method: (a, b) => a - b\\\\n        ,\\\\n        \\\\n          sign: *,\\\\n          method: (a, b) => a * b\\\\n        \\\\n      ],\\\\n      operator,\\\\n      answer,\\\\n      word = [],\\\\n      preventTouch = false,\\\\n      gameDelay = 10000,\\\\n      keyFrame = 0;\\\\n\\\\n    canvas.addEventListener(touchstart, (e) => \\\\n      keyPressed = Enter;\\\\n    );\\\\n\\\\n    function setup() \\\\n      preventTouch = false;\\\\n      ctx.font = fontSizepx Monospace;\\\\n      selectProblem();\\\\n      answer = operator.method(a, b);\\\\n      if(answer < 0) return setup();\\\\n      keyFrame = 0;\\\\n    \\\\n\\\\n    setInterval(update, 1000 / 60);\\\\n\\\\n    function update() \\\\n      keyFrame++;\\\\n      if(keyFrame === gameDelay * 60 / 1000) \\\\n        keyFrame = 0;\\\\n        selectProblem();\\\\n      \\\\n      if(keyPressed) \\\\n        if(keyPressed !== Enter) \\\\n          word.push(keyPressed);\\\\n          writeChar(keyPressed);\\\\n         else \\\\n          textIndent = textInitialPosition;\\\\n          lineNumber++;\\\\n          game();\\\\n        \\\\n        keyPressed = undefined;\\\\n      \\\\n    \\\\n\\\\n    function game() \\\\n      let _input = Number(word.join().replace(/,/g, ));\\\\n      word = [];\\\\n      preventTouch = true;\\\\n      if(_input === answer) \\\\n        write(Thats correct!);\\\\n        score++;\\\\n        setup();\\\\n       else \\\\n        write(Incorrect.);\\\\n        setTimeout(setup, 1000);\\\\n      \\\\n    \\\\n\\\\n    function getRandomInteger(min, max) \\\\n      return Math.floor(Math.random() * (max - min) + min);\\\\n    \\\\n\\\\n    function calcY(a, b, c) \\\\n      return b * c + a;\\\\n    \\\\n\\\\n    function selectProblem() \\\\n      clear();\\\\n      a = getRandomInteger(1, 10);\\\\n      b = getRandomInteger(1, 10);\\\\n      operator = ops[Math.floor(Math.random() * ops.length)];\\\\n      reportScore();\\\\n      write(Solve a operator.sign b = ?);\\\\n    \\\\n\\\\n    function reportScore() \\\\n      write(score === 1 ? Score: score point[1] : Score: score point[1]s);\\\\n    \\\\n\\\\n    function write(what) \\\\n      ctx.fillStyle = fontColor;\\\\n\\\\n      let _y = calcY(textInitialPosition, lineNumber, fontSize);\\\\n\\\\n      if(_y > canvas.height - fontSize) \\\\n        return selectProblem();\\\\n      \\\\n\\\\n      ctx.fillText(what, textInitialPosition, _y);\\\\n      lineNumber++;\\\\n    \\\\n\\\\n    function writeChar(what) \\\\n      ctx.fillStyle = fontColor;\\\\n      let _y = calcY(textInitialPosition, lineNumber, fontSize);\\\\n      ctx.fillText(what, textIndent, _y);\\\\n      textIndent += fontSize / 2;\\\\n    \\\\n\\\\n    function clear() \\\\n      lineNumber = 1;\\\\n      ctx.fillStyle = black;\\\\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\\\\n    \\\\n\\\\n    setup();\\\\n  \\\\n;\\\\n\\\\nwindow.showKeyboard = () => \\\\n  .get(#show-the-world-a-secret).focus();\\\\n;\\\\n\\\\nfunction fixHtml() \\\\n  .add(.get(.demo-addons), .getElement(\\\\n    class: button-demo-extra,\\\\n    onclick: javascript:showKeyboard();,\\\\n    contains: Show Keyboard\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: number,\\\\n    inputmode: numeric,\\\\n    pattern: [0-9]*,\\\\n    style: position:absolute;left:-9999px;top:-9999px;,\\\\n    id: show-the-world-a-secret\\\\n  ));\\\\n';\\n    if (/guess the number/gi.test(_p)) _project = '// Author: Kaden Griffith\\\\n// Descr : Guess The Number\\\\n\\\\nconst  = require(kbrew_hypertxt)();\\\\n\\\\nmodule.exports = \\\\n  Project4: () => \\\\n    use strict;\\\\n\\\\n    const canvasName = #Guess_The_Number;\\\\n\\\\n    if(!.get(canvasName)) return;\\\\n\\\\n    fixHtml();\\\\n\\\\n    window.addEventListener(keypress, (e) => \\\\n      keyPressed = e.key;\\\\n    );\\\\n\\\\n    let canvas = .get(canvasName),\\\\n      ctx = canvas.getContext(2d),\\\\n      fontSize = 14,\\\\n      fontColor = #f4f4f4,\\\\n      textInitialPosition = 13,\\\\n      textIndent = 13,\\\\n      lineNumber = 1,\\\\n      gameDelay = 10000,\\\\n      keyPressed,\\\\n      number,\\\\n      word = [],\\\\n      preventTouch = false,\\\\n      history = [];\\\\n\\\\n    canvas.addEventListener(touchstart, (e) => \\\\n      keyPressed = Enter;\\\\n    );\\\\n\\\\n    function setup() \\\\n      preventTouch = false;\\\\n      history = [];\\\\n      ctx.font = fontSizepx Monospace;\\\\n      clear();\\\\n      number = getRandomInteger(1, 100);\\\\n      setInterval(update, 1000 / 60);\\\\n    \\\\n\\\\n    function update() \\\\n      if(keyPressed) \\\\n        if(keyPressed !== Enter) \\\\n          word.push(keyPressed);\\\\n          writeChar(keyPressed);\\\\n         else \\\\n          textIndent = textInitialPosition;\\\\n          lineNumber++;\\\\n          game();\\\\n        \\\\n        keyPressed = undefined;\\\\n      \\\\n    \\\\n\\\\n    function game() \\\\n      let _guess = Number(word.join().replace(/,/g, ));\\\\n      if(!isNaN(_guess)) history.unshift(_guess);\\\\n      rewriteGuesses();\\\\n      word = [];\\\\n      if(_guess === number) \\\\n        preventTouch = true;\\\\n        if(history.length > 1) \\\\n          write(Thats correct!);\\\\n          write(You won in history.length attempts.);\\\\n         else\\\\n        if(history.length === 1) \\\\n          write(Youre a guessing master!);\\\\n          write(You won in 1 attempt!);\\\\n        \\\\n        setTimeout(setup, gameDelay);\\\\n       else if(_guess < number) \\\\n        write(Too low! Guess again.);\\\\n       else if(_guess > number) \\\\n        write(Too high! Guess again.);\\\\n       else \\\\n        write(Please guess a number.);\\\\n      \\\\n    \\\\n\\\\n    function getRandomInteger(min, max) \\\\n      return Math.floor(Math.random() * (max - min) + min);\\\\n    \\\\n\\\\n    function calcY(a, b, c) \\\\n      return b * c + a;\\\\n    \\\\n\\\\n    function write(what) \\\\n      ctx.fillStyle = fontColor;\\\\n\\\\n      let _y = calcY(textInitialPosition, lineNumber, fontSize);\\\\n\\\\n      if(_y > canvas.height - fontSize) \\\\n        clear();\\\\n        _y = calcY(textInitialPosition, lineNumber, fontSize);\\\\n      \\\\n\\\\n      ctx.fillText(what, textInitialPosition, _y);\\\\n      lineNumber++;\\\\n    \\\\n\\\\n    function writeChar(what) \\\\n      ctx.fillStyle = fontColor;\\\\n      let _y = calcY(textInitialPosition, lineNumber, fontSize);\\\\n      ctx.fillText(what, textIndent, _y);\\\\n      textIndent += fontSize / 2;\\\\n    \\\\n\\\\n    function rewriteGuesses(addLine = false) \\\\n      // Cover previous array\\\\n      ctx.fillStyle = black;\\\\n      ctx.fillRect(0, (3 * fontSize), canvas.width, 1.2 * fontSize);\\\\n\\\\n      let _y = textInitialPosition + (3 * fontSize);\\\\n      ctx.fillStyle = fontColor;\\\\n      ctx.fillText([history.join(, ).substring(0, canvas.width / fontSize)], textIndent, _y);\\\\n      if(addLine) lineNumber++;\\\\n    \\\\n\\\\n    function clear() \\\\n      lineNumber = 1;\\\\n      ctx.fillStyle = black;\\\\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\\\\n      write(Welcome to the guessing game.);\\\\n      write(Guess a number between 1 and 100.);\\\\n      rewriteGuesses(true);\\\\n      lineNumber++;\\\\n    \\\\n\\\\n    setup();\\\\n  \\\\n;\\\\n\\\\nwindow.showKeyboard = () => \\\\n  .get(#show-the-world-a-secret).focus();\\\\n;\\\\n\\\\nfunction fixHtml() \\\\n  .add(.get(.demo-addons), .getElement(\\\\n    class: button-demo-extra,\\\\n    onclick: javascript:showKeyboard();,\\\\n    contains: Show Keyboard\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: number,\\\\n    inputmode: numeric,\\\\n    pattern: [0-9]*,\\\\n    style: position:absolute;left:-9999px;top:-9999px;,\\\\n    id: show-the-world-a-secret\\\\n  ));\\\\n';\\n    if (/snake/gi.test(_p)) _project = '// Author: Kaden Griffith\\\\n// Descr : Snake\\\\n\\\\nconst  = require(kbrew_hypertxt)();\\\\n\\\\nmodule.exports = \\\\n  Project5: () => \\\\n    use strict;\\\\n\\\\n    const canvasName = #Snake;\\\\n\\\\n    if(!.get(canvasName)) return;\\\\n\\\\n    fixHtml();\\\\n\\\\n    let canvas = .get(canvasName),\\\\n      ctx = canvas.getContext(2d),\\\\n      xv = 0,\\\\n      yv = 0,\\\\n      tail = 5,\\\\n      trail = [],\\\\n      px = 0,\\\\n      py = 0,\\\\n      fx = 0,\\\\n      fy = 0,\\\\n      score = 0,\\\\n      mult = 0,\\\\n      gameDifficulty = 8,\\\\n      grid = Math.floor(Math.sqrt(canvas.height)),\\\\n      tc = Math.floor(Math.sqrt(canvas.height));\\\\n\\\\n    px = getRandomPosition(0, tc);\\\\n    py = getRandomPosition(0, tc);\\\\n\\\\n    fx = getRandomPosition(0, tc);\\\\n    fy = getRandomPosition(0, tc);\\\\n\\\\n    window.addEventListener(keypress, (e) => \\\\n      if(/w/gi.test(e.key)) \\\\n        xv = 0;\\\\n        yv = -1;\\\\n       else if(/a/gi.test(e.key)) \\\\n        xv = -1;\\\\n        yv = 0;\\\\n       else if(/s/gi.test(e.key)) \\\\n        xv = 0;\\\\n        yv = 1;\\\\n       else if(/d/gi.test(e.key)) \\\\n        xv = 1;\\\\n        yv = 0;\\\\n      \\\\n    );\\\\n\\\\n    window.addEventListener(touchstart, handleTouchStart, false);\\\\n    window.addEventListener(touchmove, handleTouchMove, false);\\\\n\\\\n    let xDown = null,\\\\n      yDown = null;\\\\n\\\\n    function handleTouchStart(evt) \\\\n      xDown = evt.touches[0].clientX;\\\\n      yDown = evt.touches[0].clientY;\\\\n    \\\\n\\\\n    function handleTouchMove(evt) \\\\n      if(!xDown || !yDown) \\\\n        return;\\\\n      \\\\n\\\\n      let xUp = evt.touches[0].clientX,\\\\n        yUp = evt.touches[0].clientY,\\\\n\\\\n        xDiff = xDown - xUp,\\\\n        yDiff = yDown - yUp;\\\\n\\\\n      if(Math.abs(xDiff) > Math.abs(yDiff)) \\\\n        if(xDiff > 0) \\\\n          /* left swipe */\\\\n          xv = -1;\\\\n          yv = 0;\\\\n         else \\\\n          /* right swipe */\\\\n          xv = 1;\\\\n          yv = 0;\\\\n        \\\\n       else \\\\n        if(yDiff > 0) \\\\n          /* up swipe */\\\\n          xv = 0;\\\\n          yv = -1;\\\\n         else \\\\n          /* down swipe */\\\\n          xv = 0;\\\\n          yv = 1;\\\\n        \\\\n      \\\\n      xDown = null;\\\\n      yDown = null;\\\\n    \\\\n\\\\n    setInterval(update, 1000 / gameDifficulty);\\\\n\\\\n    function update() \\\\n      if(!.get(canvasName)) return;\\\\n      draw();\\\\n\\\\n      px += xv;\\\\n      py += yv;\\\\n\\\\n      if(px < 0) \\\\n        px = tc + 1;\\\\n      \\\\n      if(px > tc + 1) \\\\n        px = 0;\\\\n      \\\\n      if(py < -0.5) \\\\n        py = tc + 1;\\\\n      \\\\n      if(py > tc + 1) \\\\n        py = 0;\\\\n      \\\\n    \\\\n\\\\n    function draw() \\\\n      ctx.font = 16px Ubuntu;\\\\n      ctx.fillStyle = #f4f4f4;\\\\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\\\\n\\\\n      ctx.fillStyle = #f4f4f4;\\\\n      ctx.beginPath();\\\\n\\\\n      ctx.ellipse((fx * grid) + (grid / 2) - 1, (fy * grid) + (grid / 2) - 1, (grid / 2) - 2, (grid / 2) - 2, 2 * Math.PI, Math.PI, 180);\\\\n\\\\n      ctx.fill();\\\\n      ctx.stroke();\\\\n      ctx.fillStyle = #aaa;\\\\n\\\\n      for(let i = 0; i < trail.length; i++) \\\\n        ctx.fillRect(trail[i].x * grid, trail[i].y * grid, grid - 2, grid - 2);\\\\n        if(trail[i].x === px && trail[i].y === py) \\\\n          mult = 0;\\\\n          score = 0;\\\\n          gameDifficulty = 8;\\\\n          tail = 5;\\\\n        \\\\n      \\\\n      trail.push(\\\\n        x: px,\\\\n        y: py\\\\n      );\\\\n\\\\n      while(trail.length > tail) \\\\n        trail.shift();\\\\n      \\\\n\\\\n      ctx.fillStyle = #111;\\\\n      ctx.fillText(Score:  + score, 20, canvas.height - 50);\\\\n      ctx.fillText(Food Collected:  + mult, 20, canvas.height - 25);\\\\n\\\\n      if(fx === px && fy === py) \\\\n        score = score + 20 * tail;\\\\n        mult = mult + tail / trail.length;\\\\n        gameDifficulty = gameDifficulty + 1;\\\\n        tail++;\\\\n        fx = getRandomPosition(0, tc);\\\\n        fy = getRandomPosition(0, tc);\\\\n      \\\\n    \\\\n\\\\n    function getRandomPosition(min, max) \\\\n      return Math.floor(Math.random() * (max - min) + min);\\\\n    \\\\n  \\\\n;\\\\n\\\\nwindow.preventScrolling = () => \\\\n  if(.get(#popover).style.overflowY === hidden) \\\\n    .get(#wrapper).style.position = absolute;\\\\n    .get(.project-scroller-container).style.overflowY = scroll;\\\\n    .get(#popover).style.overflowY = scroll;\\\\n    .get(.demo-code).style.overflow = scroll;\\\\n    .get(.button-demo-extra).style.backgroundColor = transparent;\\\\n    .get(.button-demo-extra).innerHTML = Disable Scroll;\\\\n   else \\\\n    .get(#wrapper).style.position = fixed;\\\\n    .get(.project-scroller-container).style.overflowY = hidden;\\\\n    .get(#popover).style.overflowY = hidden;\\\\n    .get(.demo-code).style.overflow = hidden;\\\\n    .get(.button-demo-extra).style.backgroundColor = gold;\\\\n    .get(.button-demo-extra).innerHTML = Enable Scroll;\\\\n  \\\\n;\\\\n\\\\nfunction fixHtml() \\\\n  .add(.get(.demo-addons), .getElement(\\\\n    class: button-demo-extra,\\\\n    onclick: javascript:preventScrolling();,\\\\n    contains: Disable Scroll\\\\n  ));\\\\n';\\n    if (/color viewer/gi.test(_p)) _project = '// Author: Kaden Griffith\\\\n// Descr : Color Viewer\\\\n\\\\nconst  = require(kbrew_hypertxt)();\\\\n\\\\nwindow.p6 = \\\\n  internalColor: \\\\n    red: 255,\\\\n    green: 255,\\\\n    blue: 255,\\\\n    alpha: 100\\\\n  ,\\\\n  font_shown: true\\\\n;\\\\n\\\\nmodule.exports = \\\\n  Project6: () => \\\\n    use strict;\\\\n\\\\n    let canvasName = #Color_Viewer;\\\\n\\\\n    let view,\\\\n      view_preview,\\\\n      canvas = .get(canvasName),\\\\n      ctx = canvas.getContext(2d),\\\\n      framerate = 1000 / 60;\\\\n\\\\n    if(!.get(canvasName)) return;\\\\n\\\\n    fixHtml();\\\\n\\\\n    setInterval(update, framerate);\\\\n\\\\n    function update() \\\\n      if(!.get(canvasName)) return;\\\\n\\\\n      p6.internalColor.red = .get(.demo-range_r).value;\\\\n      p6.internalColor.green = .get(.demo-range_g).value;\\\\n      p6.internalColor.blue = .get(.demo-range_b).value;\\\\n      p6.internalColor.alpha = .get(.demo-range_a).value;\\\\n\\\\n      let rgba = colorString(),\\\\n        hex = hexString();\\\\n\\\\n      .get(#hidden-copy-color).value = rgba;\\\\n      .get(#hidden-copy-hex).value = hex;\\\\n\\\\n      if(!.get(#currentColor).innerHTML.includes(rgba)) \\\\n        .get(#currentColor).innerHTML = rgba hex;\\\\n\\\\n        draw();\\\\n      \\\\n    \\\\n\\\\n    function draw() \\\\n      let _w = canvas.width,\\\\n        _h = canvas.height,\\\\n        backgroundColor = .get(#backgroundColor).value ? .get(#backgroundColor).value : black,\\\\n        fontColor = .get(#fontColor).value ? .get(#fontColor).value : black;\\\\n\\\\n      ctx.beginPath();\\\\n      ctx.fillStyle = backgroundColor;\\\\n      ctx.fillRect(0, 0, _w, _h);\\\\n      ctx.fillStyle = colorString();\\\\n      ctx.fillRect(0, 0, _w, _h);\\\\n      if(p6.font_shown) \\\\n        ctx.font =  _w / 2px Dancing Script, cursive;\\\\n        ctx.textAlign = center;\\\\n        ctx.textBaseline = middle;\\\\n        ctx.fillStyle = fontColor;\\\\n        ctx.fillText(Foo, _w / 2, _h / 2);\\\\n      \\\\n    \\\\n  \\\\n;\\\\n\\\\nfunction hexString() \\\\n  let componentToHex = (c) => \\\\n    let hex = Number(c).toString(16);\\\\n    return hex.length == 1 ? 0hex : hex;\\\\n  \\\\n\\\\n  return #componentToHex(p6.internalColor.red)componentToHex(p6.internalColor.green)componentToHex(p6.internalColor.blue);\\\\n\\\\n\\\\nfunction colorString() \\\\n  return rgba(p6.internalColor.red, p6.internalColor.green, p6.internalColor.blue, p6.internalColor.alpha / 100);\\\\n\\\\n\\\\nwindow.toggleFont = () => \\\\n  p6.font_shown = !p6.font_shown;\\\\n  .get(.button-demo-extra, 0).innerHTML = p6.font_shown ? Hide Font : Show Font;\\\\n;\\\\n\\\\nwindow.copyRgb = () => \\\\n  let e = .get(#hidden-copy-color);\\\\n  e.select();\\\\n  document.execCommand(copy);\\\\n  alert(Copied: e.value!);\\\\n;\\\\n\\\\nwindow.copyHex = () => \\\\n  let e = .get(#hidden-copy-hex);\\\\n  e.select();\\\\n  document.execCommand(copy);\\\\n  alert(Copied: e.value!);\\\\n;\\\\n\\\\nfunction fixHtml() \\\\n  let demoSlider = (options) => \\\\n    return .getElement(\\\\n      contains: options.color,\\\\n      class: demo-label\\\\n    ) + .getElement(\\\\n      tag: input,\\\\n      type: range,\\\\n      min: options.min ? options.min : 0,\\\\n      max: options.max ? options.max : 255,\\\\n      value: p6.internalColor[options.color.toLowerCase()],\\\\n      class: demo-range demo-range_options.color.toLowerCase().charAt(0)\\\\n    );\\\\n  ;\\\\n\\\\n  .add(.get(.demo-addons), .getElement(\\\\n    tag: input,\\\\n    type: text,\\\\n    id: hidden-copy-color,\\\\n    style: position:fixed;left:-9999px;top:-9999px;\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: text,\\\\n    id: hidden-copy-hex,\\\\n    style: position:fixed;left:-9999px;top:-9999px;\\\\n  ) + .getElement(\\\\n    id: currentColor\\\\n  ) + demoSlider(\\\\n    color: Red\\\\n  ) + demoSlider(\\\\n    color: Green\\\\n  ) + demoSlider(\\\\n    color: Blue\\\\n  ) + demoSlider(\\\\n    color: Alpha,\\\\n    max: 100\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: text,\\\\n    placeholder: Font Color,\\\\n    id: fontColor\\\\n  ) + .getElement(\\\\n    tag: input,\\\\n    type: text,\\\\n    placeholder: Background Color,\\\\n    id: backgroundColor\\\\n  ) + .getElement(\\\\n    class: button-demo-extra,\\\\n    onclick: javascript:toggleFont();,\\\\n    contains: p6.font_shown ? Hide Font : Show Font\\\\n  ) + .getElement(\\\\n    class: button-demo-extra,\\\\n    onclick: javascript:copyRgb();,\\\\n    contains: .icon(\\\\n      icon: copy\\\\n    ) +  RGB\\\\n  ) + .getElement(\\\\n    class: button-demo-extra,\\\\n    onclick: javascript:copyHex();,\\\\n    contains: .icon(\\\\n      icon: copy\\\\n    ) +  Hex\\\\n  ));\\\\n';\\n    if (_project.length <= 0) return false;\\n    return {\\n      src: _project,\\n      name: _p,\\n      date: C.projects.filter(function (project) {\\n        return project.name.match(_p);\\n      })[0].date\\n    };\\n  }\\n\\n  function fadeBackground(loc) {\\n    var rate = 4,\\n        shade = 170,\\n        opacity = void 0;\\n    rate = rate * 0.0009;\\n    opacity = (loc * rate).toFixed(2);\\n    opacity = opacity > 1 ? 1 : opacity;\\n    var stop = 'rgba(' + shade + ', ' + shade + ', ' + shade + ', ' + opacity + ')';\\n    $.get('.project-scroller-container').style.opacity = 1 - 0.5 * opacity;\\n    if (!isMobile()) {\\n      $.get('#wrapper').style.backgroundImage = 'linear-gradient(' + stop + ', ' + stop + '), url(' + _background2.default + ')';\\n      $.get('#wrapper').style.backgroundAttachment = 'fixed';\\n      $.get('#wrapper').style.backgroundSize = 'cover';\\n      $.get('#wrapper').style.backgroundPosition = 'top';\\n    }\\n  }\\n\\n  function verifyOrientation() {\\n    $$.deviceOrientation = window.matchMedia('(orientation: portrait)').matches ? 'portrait' : 'landscape';\\n  }\\n\\n  function isMobile() {\\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent)\\n    );\\n  }\\n\\n  function isStandalone() {\\n    return window.matchMedia('(display-mode: standalone)').matches || 'standalone' in navigator;\\n  }\\n\\n  function isFullscreen() {\\n    if ($$.deviceOrientation === 'portrait') {\\n      return $$.deviceHeight == window.innerHeight && $$.deviceWidth == window.innerWidth;\\n    } else if ($$.deviceOrientation === 'landscape') {\\n      return $$.deviceHeight == window.innerWidth && $$.deviceWidth == window.innerHeight;\\n    }\\n  }\\n}();//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///13\\n\")}}]);","extractedComments":[]}