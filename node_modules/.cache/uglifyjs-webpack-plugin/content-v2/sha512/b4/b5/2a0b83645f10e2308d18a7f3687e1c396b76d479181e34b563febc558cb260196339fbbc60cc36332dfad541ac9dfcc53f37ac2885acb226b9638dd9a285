{"map":"{\"version\":3,\"sources\":[\"/Users/kadengriffith/Desktop/Active Sites/bytewave/_public/register.js\"],\"names\":[\"$\",\"__webpack_require__\",\"get\",\"module\",\"exports\",\"createUser\",\"firebase\",\"toggleLoading\",\"user\",\"Account_Code\",\"value\",\"First_Name\",\"Last_Name\",\"Phone\",\"Email\",\"Password\",\"Repeat_Password\",\"errorMessage\",\"ph\",\"substring\",\"prop\",\"length\",\"displayMessage\",\"replace\",\"email\",\"test\",\"String\",\"toLowerCase\",\"$$\",\"isError\",\"database\",\"ref\",\"once\",\"then\",\"accounts\",\"true_account\",\"forEach\",\"account\",\"val\",\"account_code\",\"activated\",\"auth\",\"createUserWithEmailAndPassword\",\"d\",\"account_id\",\"currentUser\",\"uid\",\"set\",\"key\",\"update\",\"showPage\",\"catch\",\"err\",\"message\"],\"mappings\":\"wFAEA,IAAMA,EAAIC,EAAQ,GAAkBC,IAEpCC,EAAOC,SACLC,WAAY,SAACC,IACX,WACEC,eAAAA,GACA,IAAIC,GACAC,aAAcT,EAAE,gBAAgBU,MAChCC,WAAYX,EAAE,UAAUU,MACxBE,UAAWZ,EAAE,SAASU,MACtBG,MAAOb,EAAE,UAAUU,MACnBI,MAAOd,EAAE,UAAUU,MACnBK,SAAUf,EAAE,aAAaU,MACzBM,gBAAiBhB,EAAE,eAAeU,OAEpCO,EAAe,2BAObC,EAAKV,EAAKK,MACdL,EAAAK,MAAA,IAAoBK,EAAGC,UAAU,EAAG,GAApC,KAA2CD,EAAGC,UAAU,EAAG,GAA3D,IAAiED,EAAGC,UAAU,EAAG,IAEjF,WACE,IAAI,IAAIC,KAAQZ,EACd,IAAIA,EAAKY,GAAMC,OAAS,EAAG,OAAOC,eAAAA,KAAoBL,EAApB,kBAAkDG,EAAKG,QAAQ,IAAK,KAApE,cAVtC,IAAwBC,EAyBtB,OAzBsBA,EAYJhB,EAAKM,MAXf,0JACEW,KAAKC,OAAOF,GAAOG,eAYnBnB,EAAKO,WAAaP,EAAKQ,gBAC/BM,eAAAA,KAAoBL,EAApB,2CACST,EAAKO,SAASM,QAAU,EACjCC,eAAAA,KAAoBL,EAApB,yCACS,QAAQQ,KAAKjB,EAAKO,UAElB,QAAQU,KAAKjB,EAAKO,WAC3BO,eAAAA,KAAoBL,EAApB,kEAFAK,eAAAA,KAAoBL,EAApB,kEANAK,eAAAA,KAAoBL,EAApB,uCAYMW,GAAGC,UAjBb,GAqBEvB,EAASwB,WAAWC,IAApB,mBAA2CC,KAAK,SAASC,KAAK,SAAAC,GAC5D,IAAIC,GAAAA,EACJD,EAASE,QAAQ,SAAAC,GACZA,EAAQC,MAAMC,eAAiB/B,EAAKC,eACrC0B,GAAeE,EAAQC,MAAME,aAI9BL,EACD7B,EAASmC,OAAOC,+BAA+BlC,EAAKM,MAAON,EAAKO,UAAUkB,KAAK,kBAEtEzB,EAAAO,gBACAP,EAAAQ,gBAEP,IAAI2B,GACFC,WAAYtC,EAASmC,OAAOI,YAAYC,KAE1C,IAAI,IAAI1B,KAAQZ,EAEdmC,EADQvB,EAAKO,eACNnB,EAAKY,GAIdd,EAASwB,WAAWC,IAApB,SAAiCY,EAAEC,YAAcG,IAAIJ,GACrDrC,EAASwB,WAAWC,IAApB,mBAA2CC,KAAK,SAASC,KAAK,SAAAC,GAC5DA,EAASE,QAAQ,SAAAC,GAEf,GAAGA,EAAQC,MAAMC,eAAiB/B,EAAKC,aACrC,OAAOH,EAASwB,WAAWC,IAApB,mBAA2CM,EAAQW,KAAOC,QAC/DT,WAAAA,MAINU,SAAS,SACT5B,eAAAA,gCAED6B,MAAM,SAAAC,GACP7C,eAAAA,GACAe,eAAAA,yFAAwG8B,EAAIC,YAG9G9C,eAAAA,GACAe,eAAAA,uBAAsCd,EAAKC,aAA3C,qBAIJF,eAAAA,GAxFJ\",\"sourcesContent\":[\"// Registration\\n\\nconst $ = require('kbrew_hypertxt').get;\\n\\nmodule.exports = {\\n  createUser: (firebase) => {\\n    function register() {\\n      toggleLoading(true);\\n      let user = {\\n          Account_Code: $('#accountCode').value,\\n          First_Name: $('#first').value,\\n          Last_Name: $('#last').value,\\n          Phone: $('#phone').value,\\n          Email: $('#email').value,\\n          Password: $('#password').value,\\n          Repeat_Password: $('#password-c').value\\n        },\\n        errorMessage = 'Failed to register user.';\\n\\n      function validatedEmail(email) {\\n        let r = /^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\\\"]+)*)|(\\\".+\\\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$/;\\n        return !r.test(String(email).toLowerCase());\\n      }\\n\\n      let ph = user.Phone;\\n      user['Phone'] = `(${ph.substring(0, 3)}) ${ph.substring(3, 6)}-${ph.substring(6, 10)}`;\\n\\n      function validatedData() {\\n        for(let prop in user) {\\n          if(!user[prop].length > 0) return displayMessage(`e:${errorMessage}<br>Reason:<br>${prop.replace('_', ' ')} is empty.`);\\n        }\\n        if(validatedEmail(user.Email)) {\\n          displayMessage(`e:${errorMessage}<br>Reason:<br>Email is not valid.`);\\n        } else if(user.Password !== user.Repeat_Password) {\\n          displayMessage(`e:${errorMessage}<br>Reason:<br>Passwords do not match.`);\\n        } else if(!user.Password.length >= 8) {\\n          displayMessage(`e:${errorMessage}<br>Reason:<br>Password is too short.`);\\n        } else if(!/[a-z]/.test(user.Password)) {\\n          displayMessage(`e:${errorMessage}<br>Reason:<br>Password does not contain lower-case letter(s).`);\\n        } else if(!/[A-Z]/.test(user.Password)) {\\n          displayMessage(`e:${errorMessage}<br>Reason:<br>Password does not contain upper-case letter(s).`);\\n        }\\n\\n        // Window device object Form validation\\n        return !$$.isError();\\n      }\\n\\n      if(validatedData()) {\\n        firebase.database().ref(`active_accounts`).once('value').then(accounts => {\\n          let true_account = false;\\n          accounts.forEach(account => {\\n            if(account.val().account_code === user.Account_Code) {\\n              true_account = account.val().activated ? false : true;\\n              return;\\n            }\\n          });\\n          if(true_account) {\\n            firebase.auth().createUserWithEmailAndPassword(user.Email, user.Password).then(() => {\\n              // Remove data that should not be in the database\\n              delete user['Password'];\\n              delete user['Repeat_Password'];\\n              // Reformat the data\\n              let d = {\\n                account_id: firebase.auth().currentUser.uid\\n              };\\n              for(let prop in user) {\\n                let p = prop.toLowerCase();\\n                d[p] = user[prop];\\n              }\\n\\n              // Save\\n              firebase.database().ref(`users/${d.account_id}`).set(d);\\n              firebase.database().ref(`active_accounts`).once('value').then(accounts => {\\n                accounts.forEach(account => {\\n                  // Activating restricts others from setting an account.\\n                  if(account.val().account_code === user.Account_Code) {\\n                    return firebase.database().ref(`active_accounts/${account.key}`).update({\\n                      activated: true\\n                    });\\n                  }\\n                });\\n                showPage('learn');\\n                displayMessage(`s:Your account is ready!`);\\n              });\\n            }).catch(err => {\\n              toggleLoading(false);\\n              displayMessage(`e:We're currently unable to create your account.<br>Please try again later.<br>Error: ${err.message}`);\\n            });\\n          } else {\\n            toggleLoading(false);\\n            displayMessage(`e:The account code #${user.Account_Code} is not valid.`);\\n          }\\n        });\\n      } else {\\n        toggleLoading(false);\\n      }\\n    }\\n\\n    register();\\n  }\\n};\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{9:function(e,a,s){\"use strict\";var o=s(1).get;e.exports={createUser:function(e){!function(){toggleLoading(!0);var a={Account_Code:o(\"#accountCode\").value,First_Name:o(\"#first\").value,Last_Name:o(\"#last\").value,Phone:o(\"#phone\").value,Email:o(\"#email\").value,Password:o(\"#password\").value,Repeat_Password:o(\"#password-c\").value},s=\"Failed to register user.\",t=a.Phone;a.Phone=\"(\"+t.substring(0,3)+\") \"+t.substring(3,6)+\"-\"+t.substring(6,10),function(){for(var e in a)if(!a[e].length>0)return displayMessage(\"e:\"+s+\"<br>Reason:<br>\"+e.replace(\"_\",\" \")+\" is empty.\");var o;return o=a.Email,/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(String(o).toLowerCase())?a.Password!==a.Repeat_Password?displayMessage(\"e:\"+s+\"<br>Reason:<br>Passwords do not match.\"):!a.Password.length>=8?displayMessage(\"e:\"+s+\"<br>Reason:<br>Password is too short.\"):/[a-z]/.test(a.Password)?/[A-Z]/.test(a.Password)||displayMessage(\"e:\"+s+\"<br>Reason:<br>Password does not contain upper-case letter(s).\"):displayMessage(\"e:\"+s+\"<br>Reason:<br>Password does not contain lower-case letter(s).\"):displayMessage(\"e:\"+s+\"<br>Reason:<br>Email is not valid.\"),!$$.isError()}()?e.database().ref(\"active_accounts\").once(\"value\").then(function(s){var o=!1;s.forEach(function(e){e.val().account_code!==a.Account_Code||(o=!e.val().activated)}),o?e.auth().createUserWithEmailAndPassword(a.Email,a.Password).then(function(){delete a.Password,delete a.Repeat_Password;var s={account_id:e.auth().currentUser.uid};for(var o in a)s[o.toLowerCase()]=a[o];e.database().ref(\"users/\"+s.account_id).set(s),e.database().ref(\"active_accounts\").once(\"value\").then(function(s){s.forEach(function(s){if(s.val().account_code===a.Account_Code)return e.database().ref(\"active_accounts/\"+s.key).update({activated:!0})}),showPage(\"learn\"),displayMessage(\"s:Your account is ready!\")})}).catch(function(e){toggleLoading(!1),displayMessage(\"e:We're currently unable to create your account.<br>Please try again later.<br>Error: \"+e.message)}):(toggleLoading(!1),displayMessage(\"e:The account code #\"+a.Account_Code+\" is not valid.\"))}):toggleLoading(!1)}()}}}}]);","extractedComments":[]}